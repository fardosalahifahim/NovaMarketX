{"version":3,"file":"static/js/621.2b31bb4b.chunk.js","mappings":"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","sources":["admin/AdminNavBar.js","admin/AdminMessages.js","admin/Orders.js","admin/OrderHistory.js","admin/CancelOrders.js","admin/DeliveredOrders.js","admin/AdminConfirmedOrders.js","admin/AdminShippedOrders.js","components/CustomTooltip.js","admin/Dashboard.js","admin/BannerForm.js","admin/BannerManagement.js","admin/ProductDetailsModal.js","admin/AdminPanel.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './AdminPanel.css';\r\n\r\nconst AdminNavBar = ({ activeSection, onSectionChange, onLogout, onOrderFilterChange }) => {\r\n  const [selectedFilter, setSelectedFilter] = useState('orders');\r\n\r\n  const filters = [\r\n    { label: 'Dashboard', value: 'dashboard' },\r\n    { label: 'Product List', value: 'products' },\r\n    { label: 'User Data', value: 'users' },\r\n    { label: 'Orders', value: 'orders' },\r\n    { label: 'Canceled Orders', value: 'cancelorder' },\r\n    { label: 'History', value: 'orderhistory' },\r\n    { label: 'Delivered Orders', value: 'deliveredorders' },\r\n    { label: 'Confirmed Orders', value: 'confirmedOrders' },\r\n    { label: 'Shipped Orders', value: 'shippedOrders' },\r\n    { label: 'Messages', value: 'messages' },\r\n    { label: 'Update', value: 'update' },\r\n  ];\r\n\r\n  // Added Update feature for editing hero banner\r\n\r\n  const handleFilterSelect = (value) => {\r\n    setSelectedFilter(value);\r\n    onOrderFilterChange(value);\r\n  };\r\n\r\n  return (\r\n    <nav className=\"admin-nav-bar\">\r\n      <ul style={{ display: 'flex', flexDirection: 'column' }}>\r\n        {filters.map((filter, index) => (\r\n          <li\r\n            key={index}\r\n            className={activeSection === filter.value ? 'active' : ''}\r\n            onClick={() => onSectionChange(filter.value)}\r\n            style={{ order: index }}\r\n          >\r\n            {filter.label}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <div className=\"admin-nav-bar-logout\">\r\n        <button onClick={onLogout}>Logout</button>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default AdminNavBar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './AdminMessages.css';\r\n\r\nconst AdminMessages = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [loadingMessages, setLoadingMessages] = useState(true);\r\n  const [selectedUserId, setSelectedUserId] = useState(null);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const adminId = 'animespring'; // fixed admin id string\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('Connecting to SSE endpoint as admin'); // Debug log\r\n    // Setup SSE connection for real-time updates as admin\r\n    const eventSource = new EventSource(`http://localhost:5000/api/messages/stream?isAdmin=true`);\r\n\r\n    eventSource.onopen = () => {\r\n      console.log('SSE connection opened'); // Debug log\r\n    };\r\n\r\n    eventSource.onmessage = (event) => {\r\n      try {\r\n        const data = JSON.parse(event.data);\r\n        console.log('Received SSE data:', data); // Debug log\r\n        // If data is an array, it's initial data\r\n        if (Array.isArray(data)) {\r\n          setMessages(data);\r\n          setLoadingMessages(false);\r\n          console.log('Initial messages loaded:', data.length); // Debug log\r\n        } else {\r\n          // If data is a single object, it's a new message\r\n          setMessages((prevMessages) => {\r\n            // Avoid duplicate messages\r\n            if (prevMessages.find(msg => msg.id === data.id)) {\r\n              return prevMessages;\r\n            }\r\n            return [...prevMessages, data];\r\n          });\r\n          console.log('New message received:', data); // Debug log\r\n        }\r\n      } catch (error) {\r\n        console.error('Error parsing SSE message:', error);\r\n      }\r\n    };\r\n\r\n    eventSource.onerror = (err) => {\r\n      console.error('EventSource failed:', err);\r\n      eventSource.close();\r\n      setLoadingMessages(false);\r\n    };\r\n\r\n    // Set a timeout to stop loading if no messages are received\r\n    const timeout = setTimeout(() => {\r\n      console.log('SSE timeout reached, stopping loading'); // Debug log\r\n      setLoadingMessages(false);\r\n    }, 5000);\r\n\r\n    return () => {\r\n      console.log('Closing SSE connection'); // Debug log\r\n      eventSource.close();\r\n      clearTimeout(timeout);\r\n    };\r\n  }, []);\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:5000/api/users');\r\n      setUsers(res.data);\r\n      if (res.data.length > 0) {\r\n        setSelectedUserId(res.data[0].id);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching users:', error);\r\n    }\r\n  };\r\n\r\n  const fetchMessages = async (userId) => {\r\n    setLoadingMessages(true);\r\n    try {\r\n      const res = await axios.get(`http://localhost:5000/api/messages?userId=${userId}`);\r\n      setMessages(res.data);\r\n    } catch (error) {\r\n      console.error('Error fetching messages:', error);\r\n    } finally {\r\n      setLoadingMessages(false);\r\n    }\r\n  };\r\n\r\n  const handleUserSelect = (userId) => {\r\n    setSelectedUserId(userId);\r\n  };\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!newMessage.trim() || !selectedUserId) return;\r\n    try {\r\n      await axios.post('http://localhost:5000/api/faq-messages', {\r\n        content: newMessage.trim(),\r\n        senderId: adminId,\r\n        receiverId: selectedUserId,\r\n      });\r\n      setNewMessage('');\r\n      fetchMessages(selectedUserId);\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n    }\r\n  };\r\n\r\n  // Get username by userId\r\n  const getUsername = (userId) => {\r\n    const user = users.find(u => u.id === userId);\r\n    return user ? user.username : 'Unknown User';\r\n  };\r\n\r\n  // Get last message for each user for preview\r\n  const lastMessagesMap = {};\r\n  messages.forEach((msg) => {\r\n    // For admin panel, we want to show messages between any user and admin\r\n    const userId = msg.senderId === adminId ? msg.receiverId : msg.senderId;\r\n    lastMessagesMap[userId] = msg;\r\n  });\r\n\r\n  // Get messages for selected user (if any user is selected)\r\n  const filteredMessages = selectedUserId \r\n    ? messages.filter(msg => \r\n        (msg.senderId === adminId && msg.receiverId === selectedUserId) ||\r\n        (msg.senderId === selectedUserId && msg.receiverId === adminId)\r\n      )\r\n    : [];\r\n\r\n  return (\r\n    <div className=\"admin-messages-container\">\r\n      <div className=\"sidebar\">\r\n        <h2>Users</h2>\r\n        <ul className=\"user-list\">\r\n          {users.map((user) => {\r\n            const lastMsg = lastMessagesMap[user.id];\r\n            return (\r\n              <li\r\n                key={user.id}\r\n                className={`user-item ${selectedUserId === user.id ? 'selected' : ''}`}\r\n                onClick={() => handleUserSelect(user.id)}\r\n              >\r\n                <div className=\"user-avatar\">\r\n                  {user.username.charAt(0).toUpperCase()}\r\n                </div>\r\n                <div className=\"user-info\">\r\n                  <div className=\"user-name\">{getUsername(user.id)}</div>\r\n                  <div className=\"user-last-message\">\r\n                    {lastMsg ? lastMsg.content : 'No messages yet'}\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n      <div className=\"chat-window\">\r\n          <div className=\"chat-header\">\r\n            {selectedUserId ? getUsername(selectedUserId) : 'Select a user'}\r\n          </div>\r\n        <div className=\"chat-messages\">\r\n          {loadingMessages ? (\r\n            <p>Loading messages...</p>\r\n          ) : selectedUserId && filteredMessages.length === 0 ? (\r\n            <p>No messages found for this user.</p>\r\n          ) : selectedUserId ? (\r\n            filteredMessages.map((msg) => (\r\n              <div key={msg.id} className=\"chat-message\">\r\n                <div className=\"message-content\">{msg.content}</div>\r\n                <div className=\"message-timestamp\">\r\n                  {new Date(msg.timestamp).toLocaleString()}\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : messages.length > 0 ? (\r\n            <p>Please select a user to view messages.</p>\r\n          ) : (\r\n            <p>No messages available. Please select a user and send a message.</p>\r\n          )}\r\n        </div>\r\n        <div className=\"chat-input\">\r\n          <textarea\r\n            placeholder=\"Type your message...\"\r\n            value={newMessage}\r\n            onChange={(e) => setNewMessage(e.target.value)}\r\n            disabled={!selectedUserId}\r\n          />\r\n          <button onClick={handleSendMessage} disabled={!selectedUserId}>Send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminMessages;\r\n","import React, { useState } from 'react';\r\nimport './Orders.css';\r\n\r\n\r\nconst Orders = ({ orders, products = [], users = [], onDeleteOrder, isProfileOrders }) => {\r\n  console.log('Orders component received users:', users);\r\n  console.log('Orders component received orders:', orders);\r\n  console.log('Users data loaded from import:', users);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [searchField, setSearchField] = useState('orderId');\r\n  const [statusFilter, setStatusFilter] = useState('all');\r\n\r\n  // Helper to get product details by id\r\n  const getProductById = (id) => {\r\n    if (!products || products.length === 0) return null;\r\n    return products.find(product => product.id === id);\r\n  };\r\n\r\n  // Helper to get user details by id or uid from users.json\r\n  const getUserById = (userId) => {\r\n    if (!users || users.length === 0) {\r\n      console.log('Users data array is empty or null');\r\n      return null;\r\n    }\r\n\r\n    console.log('Looking for user with ID/UID:', userId, 'Type:', typeof userId);\r\n    console.log('Available users count:', users.length);\r\n    console.log('Available UIDs:', users.map(u => u.uid).filter(Boolean));\r\n\r\n    let user = null;\r\n\r\n    // First try to find by uid (Firebase Auth UID)\r\n    user = users.find(user => user.uid === userId);\r\n\r\n    // If not found, try to find by id (numeric or string)\r\n    if (!user) {\r\n      user = users.find(user => String(user.id) === String(userId));\r\n    }\r\n\r\n    // If not found, try case-insensitive uid match\r\n    if (!user) {\r\n      user = users.find(user => user.uid && user.uid.toLowerCase() === String(userId).toLowerCase());\r\n      if (user) {\r\n        console.log('User found by case-insensitive UID match:', userId);\r\n      }\r\n    }\r\n\r\n    // Try partial UID match (first 10 characters) as fallback\r\n    if (!user) {\r\n      user = users.find(user => user.uid && user.uid.startsWith(userId.substring(0, 10)));\r\n      if (user) {\r\n        console.log('User found by partial UID match:', userId);\r\n      }\r\n    }\r\n\r\n    if (user) {\r\n      console.log('Successfully found user:', {\r\n        id: user.id,\r\n        uid: user.uid,\r\n        username: user.username,\r\n        email: user.email,\r\n        phone: user.phone\r\n      });\r\n    } else {\r\n      console.log('No user found with ID/UID:', userId);\r\n      console.log('Available user IDs:', users.map(u => u.id));\r\n      console.log('Available UIDs:', users.map(u => u.uid).filter(Boolean));\r\n    }\r\n\r\n    return user;\r\n  };\r\n\r\n  // Allowed statuses to show\r\n  const allowedStatuses = ['canceled', 'pending', 'delivered', 'confirmed', 'shipping'];\r\n\r\n  // Filter orders based on search term, selected field, and status filter (case-insensitive, partial match)\r\n  let filteredOrders = orders.filter(order => {\r\n    const lowerSearch = searchTerm.toLowerCase();\r\n\r\n    // Filter by statusFilter dropdown\r\n    if (statusFilter === 'canceled' && order.status.toLowerCase() !== 'canceled') return false;\r\n    if (statusFilter === 'history' && !['canceled', 'delivered'].includes(order.status.toLowerCase())) return false;\r\n    if (statusFilter === 'delivered' && order.status.toLowerCase() !== 'delivered') return false;\r\n\r\n    switch (searchField) {\r\n      case 'orderId':\r\n        return order.id.toString().toLowerCase().includes(lowerSearch);\r\n      case 'userId':\r\n        return order.userId.toString().toLowerCase().includes(lowerSearch);\r\n      case 'productId':\r\n        return order.productIds && order.productIds.some(pid => pid.toString().toLowerCase().includes(lowerSearch));\r\n      case 'phoneNumber':\r\n        return order.shippingAddress && order.shippingAddress.phoneNumber && order.shippingAddress.phoneNumber.toLowerCase().includes(lowerSearch);\r\n      case 'status':\r\n        return order.status && order.status.toLowerCase().includes(lowerSearch);\r\n      default:\r\n        return true;\r\n    }\r\n  });\r\n\r\n  // Deduplicate orders by order id\r\n  const uniqueOrdersMap = new Map();\r\n  filteredOrders.forEach(order => {\r\n    if (!uniqueOrdersMap.has(order.id)) {\r\n      uniqueOrdersMap.set(order.id, order);\r\n    }\r\n  });\r\n  filteredOrders = Array.from(uniqueOrdersMap.values());\r\n\r\n  const [orderStatuses, setOrderStatuses] = useState(\r\n    orders.reduce((acc, order) => {\r\n      acc[order.id] = order.status;\r\n      return acc;\r\n    }, {})\r\n  );\r\n\r\n  const updateOrderStatus = async (orderId, newStatus) => {\r\n    try {\r\n      // Log the request details for debugging\r\n      console.log(`Updating order ${orderId} status to ${newStatus}`);\r\n      const response = await fetch(`http://localhost:5000/api/orders/${orderId}`, {\r\n        method: 'PATCH',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ status: newStatus }),\r\n      });\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        console.error('Failed to update order status:', response.status, errorText);\r\n        throw new Error(`Failed to update order status: ${response.status} ${errorText}`);\r\n      }\r\n      setOrderStatuses(prev => ({ ...prev, [orderId]: newStatus }));\r\n      if (typeof onOrderStatusChange === 'function') {\r\n        onOrderStatusChange();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating order status:', error);\r\n      alert('Failed to update order status');\r\n    }\r\n  };\r\n\r\n  const handleConfirm = (orderId) => {\r\n    // Use a modal popup for confirmation with improved styling\r\n    const modal = document.createElement('div');\r\n    modal.style.position = 'fixed';\r\n    modal.style.top = '0';\r\n    modal.style.left = '0';\r\n    modal.style.width = '100vw';\r\n    modal.style.height = '100vh';\r\n    modal.style.backgroundColor = 'rgba(0,0,0,0.6)';\r\n    modal.style.display = 'flex';\r\n    modal.style.justifyContent = 'center';\r\n    modal.style.alignItems = 'center';\r\n    modal.style.zIndex = '10000';\r\n\r\n    const popup = document.createElement('div');\r\n    popup.style.backgroundColor = '#fefefe';\r\n    popup.style.padding = '30px 40px';\r\n    popup.style.borderRadius = '12px';\r\n    popup.style.boxShadow = '0 8px 24px rgba(0,0,0,0.3)';\r\n    popup.style.textAlign = 'center';\r\n    popup.style.minWidth = '320px';\r\n    popup.style.fontFamily = \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\";\r\n\r\n    const message = document.createElement('p');\r\n    message.textContent = 'Are you sure you want to confirm this order?';\r\n    message.style.fontSize = '18px';\r\n    message.style.marginBottom = '25px';\r\n    message.style.color = '#333';\r\n\r\n    const btnConfirm = document.createElement('button');\r\n    btnConfirm.textContent = 'Confirm';\r\n    btnConfirm.style.margin = '0 15px';\r\n    btnConfirm.style.padding = '10px 25px';\r\n    btnConfirm.style.border = 'none';\r\n    btnConfirm.style.borderRadius = '6px';\r\n    btnConfirm.style.backgroundColor = '#4CAF50';\r\n    btnConfirm.style.color = 'white';\r\n    btnConfirm.style.fontWeight = '600';\r\n    btnConfirm.style.cursor = 'pointer';\r\n    btnConfirm.style.fontSize = '16px';\r\n    btnConfirm.style.boxShadow = '0 4px 10px rgba(76, 175, 80, 0.4)';\r\n    btnConfirm.onmouseover = () => btnConfirm.style.backgroundColor = '#45a049';\r\n    btnConfirm.onmouseout = () => btnConfirm.style.backgroundColor = '#4CAF50';\r\n    btnConfirm.onclick = () => {\r\n      updateOrderStatus(orderId, 'confirmed');\r\n      document.body.removeChild(modal);\r\n    };\r\n\r\n    const btnCancel = document.createElement('button');\r\n    btnCancel.textContent = 'Cancel';\r\n    btnCancel.style.margin = '0 15px';\r\n    btnCancel.style.padding = '10px 25px';\r\n    btnCancel.style.border = 'none';\r\n    btnCancel.style.borderRadius = '6px';\r\n    btnCancel.style.backgroundColor = '#f44336';\r\n    btnCancel.style.color = 'white';\r\n    btnCancel.style.fontWeight = '600';\r\n    btnCancel.style.cursor = 'pointer';\r\n    btnCancel.style.fontSize = '16px';\r\n    btnCancel.style.boxShadow = '0 4px 10px rgba(244, 67, 54, 0.4)';\r\n    btnCancel.onmouseover = () => btnCancel.style.backgroundColor = '#da190b';\r\n    btnCancel.onmouseout = () => btnCancel.style.backgroundColor = '#f44336';\r\n    btnCancel.onclick = () => {\r\n      document.body.removeChild(modal);\r\n    };\r\n\r\n    popup.appendChild(message);\r\n    popup.appendChild(btnConfirm);\r\n    popup.appendChild(btnCancel);\r\n    modal.appendChild(popup);\r\n    document.body.appendChild(modal);\r\n  };\r\n\r\n  const handleShipping = (orderId) => {\r\n    updateOrderStatus(orderId, 'shipping');\r\n  };\r\n\r\n  const handleCancel = async (orderId) => {\r\n    if (isProfileOrders && orderStatuses[orderId] === 'confirmed') {\r\n      alert('Confirmed orders cannot be canceled.');\r\n      return;\r\n    }\r\n    // Show confirmation modal before canceling\r\n    const modal = document.createElement('div');\r\n    modal.style.position = 'fixed';\r\n    modal.style.top = '0';\r\n    modal.style.left = '0';\r\n    modal.style.width = '100vw';\r\n    modal.style.height = '100vh';\r\n    modal.style.backgroundColor = 'rgba(0,0,0,0.6)';\r\n    modal.style.display = 'flex';\r\n    modal.style.justifyContent = 'center';\r\n    modal.style.alignItems = 'center';\r\n    modal.style.zIndex = '10000';\r\n\r\n    const popup = document.createElement('div');\r\n    popup.style.backgroundColor = '#fefefe';\r\n    popup.style.padding = '30px 40px';\r\n    popup.style.borderRadius = '12px';\r\n    popup.style.boxShadow = '0 8px 24px rgba(0,0,0,0.3)';\r\n    popup.style.textAlign = 'center';\r\n    popup.style.minWidth = '320px';\r\n    popup.style.fontFamily = \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\";\r\n\r\n    const message = document.createElement('p');\r\n    message.textContent = 'Are you sure you want to cancel this order?';\r\n    message.style.fontSize = '18px';\r\n    message.style.marginBottom = '25px';\r\n    message.style.color = '#333';\r\n\r\n    const btnConfirm = document.createElement('button');\r\n    btnConfirm.textContent = 'Cancel Order';\r\n    btnConfirm.style.margin = '0 15px';\r\n    btnConfirm.style.padding = '10px 25px';\r\n    btnConfirm.style.border = 'none';\r\n    btnConfirm.style.borderRadius = '6px';\r\n    btnConfirm.style.backgroundColor = '#f44336';\r\n    btnConfirm.style.color = 'white';\r\n    btnConfirm.style.fontWeight = '600';\r\n    btnConfirm.style.cursor = 'pointer';\r\n    btnConfirm.style.fontSize = '16px';\r\n    btnConfirm.style.boxShadow = '0 4px 10px rgba(244, 67, 54, 0.4)';\r\n    btnConfirm.onmouseover = () => btnConfirm.style.backgroundColor = '#da190b';\r\n    btnConfirm.onmouseout = () => btnConfirm.style.backgroundColor = '#f44336';\r\n    btnConfirm.onclick = async () => {\r\n      try {\r\n        await updateOrderStatus(orderId, 'canceled');\r\n        console.log(`Order ${orderId} canceled successfully`);\r\n        if (typeof onOrderStatusChange === 'function') {\r\n          onOrderStatusChange();\r\n        }\r\n      } catch (error) {\r\n        console.error(`Failed to cancel order ${orderId}:`, error);\r\n        alert('Failed to cancel order');\r\n      }\r\n      document.body.removeChild(modal);\r\n    };\r\n\r\n    const btnCancel = document.createElement('button');\r\n    btnCancel.textContent = 'Keep Order';\r\n    btnCancel.style.margin = '0 15px';\r\n    btnCancel.style.padding = '10px 25px';\r\n    btnCancel.style.border = 'none';\r\n    btnCancel.style.borderRadius = '6px';\r\n    btnCancel.style.backgroundColor = '#4CAF50';\r\n    btnCancel.style.color = 'white';\r\n    btnCancel.style.fontWeight = '600';\r\n    btnCancel.style.cursor = 'pointer';\r\n    btnCancel.style.fontSize = '16px';\r\n    btnCancel.style.boxShadow = '0 4px 10px rgba(76, 175, 80, 0.4)';\r\n    btnCancel.onmouseover = () => btnCancel.style.backgroundColor = '#45a049';\r\n    btnCancel.onmouseout = () => btnCancel.style.backgroundColor = '#4CAF50';\r\n    btnCancel.onclick = () => {\r\n      document.body.removeChild(modal);\r\n    };\r\n\r\n    popup.appendChild(message);\r\n    popup.appendChild(btnConfirm);\r\n    popup.appendChild(btnCancel);\r\n    modal.appendChild(popup);\r\n    document.body.appendChild(modal);\r\n  };\r\n\r\n  const handleDelivered = (orderId) => {\r\n    // Use a modal popup instead of window.confirm for better UI\r\n    const modal = document.createElement('div');\r\n    modal.style.position = 'fixed';\r\n    modal.style.top = '0';\r\n    modal.style.left = '0';\r\n    modal.style.width = '100vw';\r\n    modal.style.height = '100vh';\r\n    modal.style.backgroundColor = 'rgba(0,0,0,0.5)';\r\n    modal.style.display = 'flex';\r\n    modal.style.justifyContent = 'center';\r\n    modal.style.alignItems = 'center';\r\n    modal.style.zIndex = '1000';\r\n\r\n    const popup = document.createElement('div');\r\n    popup.style.backgroundColor = 'white';\r\n    popup.style.padding = '20px';\r\n    popup.style.borderRadius = '8px';\r\n    popup.style.boxShadow = '0 2px 10px rgba(0,0,0,0.3)';\r\n    popup.style.textAlign = 'center';\r\n\r\n    const message = document.createElement('p');\r\n    message.textContent = 'Are you sure you want to mark this order as delivered?';\r\n\r\n    const btnConfirm = document.createElement('button');\r\n    btnConfirm.textContent = 'Confirm';\r\n    btnConfirm.style.margin = '10px';\r\n    btnConfirm.onclick = () => {\r\n      updateOrderStatus(orderId, 'delivered');\r\n      document.body.removeChild(modal);\r\n      // Optionally, trigger a refresh or callback to update UI after status change\r\n      if (typeof window.refreshOrders === 'function') {\r\n        window.refreshOrders();\r\n      }\r\n    };\r\n\r\n    const btnCancel = document.createElement('button');\r\n    btnCancel.textContent = 'Cancel';\r\n    btnCancel.style.margin = '10px';\r\n    btnCancel.onclick = () => {\r\n      document.body.removeChild(modal);\r\n    };\r\n\r\n    popup.appendChild(message);\r\n    popup.appendChild(btnConfirm);\r\n    popup.appendChild(btnCancel);\r\n    modal.appendChild(popup);\r\n    document.body.appendChild(modal);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 id=\"orders\">{isProfileOrders ? 'Profile Orders' : 'Orders'}</h1>\r\n      <div style={{ marginBottom: '20px', padding: '10px', backgroundColor: '#f5f5f5', borderRadius: '5px' }}>\r\n        <strong>Debug Info:</strong>\r\n        <div>Users loaded: {users ? users.length : 0}</div>\r\n        <div>Orders loaded: {orders ? orders.length : 0}</div>\r\n        <div>Processing orders: {orders ? orders.filter(order => order.status.toLowerCase() === 'pending' || order.status.toLowerCase() === 'processing').length : 0}</div>\r\n      </div>\r\n      <div className=\"order-search-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search orders\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          className=\"order-search-input\"\r\n        />\r\n        <select\r\n          value={searchField}\r\n          onChange={(e) => setSearchField(e.target.value)}\r\n          className=\"order-search-select\"\r\n        >\r\n          <option value=\"orderId\">Order ID</option>\r\n          <option value=\"userId\">User ID</option>\r\n          <option value=\"productId\">Product ID</option>\r\n          <option value=\"phoneNumber\">Phone Number</option>\r\n          <option value=\"status\">Status</option>\r\n        </select>\r\n        <select\r\n          value={statusFilter}\r\n          onChange={(e) => setStatusFilter(e.target.value)}\r\n          className=\"order-status-filter\"\r\n          style={{ marginLeft: '10px' }}\r\n        >\r\n          <option value=\"all\">All</option>\r\n          <option value=\"canceled\">Canceled</option>\r\n          <option value=\"history\">History</option>\r\n          <option value=\"delivered\">Delivered</option>\r\n        </select>\r\n      </div>\r\n      {filteredOrders.length === 0 ? (\r\n        <p>No orders found.</p>\r\n      ) : (\r\n        <table className=\"orders-table\">\r\n          <thead>\r\n          <tr>\r\n              <th>Products</th>\r\n              <th>Shipping Details</th>\r\n              <th>Order ID</th>\r\n              <th>User ID</th>\r\n              <th>Status</th>\r\n              \r\n              <th>Quantity</th>\r\n              <th>Payment Method</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredOrders.map(order => (\r\n              <tr key={order.id} className=\"order-table-row\">\r\n              <td>\r\n                <ul className=\"product-list\">\r\n                  {order.productDetails && order.productDetails.length > 0 ? order.productDetails.map(productDetail => {\r\n                    const product = getProductById(productDetail.id);\r\n                    if (!product) return <li key={productDetail.id}>Product ID: {productDetail.id} (Not found)</li>;\r\n                    return (\r\n                      <li key={productDetail.id} className=\"product-list-item\">\r\n                        <img src={product.imageUrl} alt={product.name} className=\"product-image\" />\r\n                        <div className=\"product-info\">\r\n                          <div className=\"product-name\">{product.name}</div>\r\n                          <div className=\"product-id\">ID: {product.id}</div>\r\n                          <div className=\"product-price\">price: ${product.price.toFixed(2)} <br></br> Total: ${(product.price * productDetail.quantity).toFixed(2)}</div>\r\n                          <div className=\"product-quantity\">Quantity: {productDetail.quantity}</div>\r\n                        </div>\r\n                      </li>\r\n                    );\r\n                  }) : (order.productIds && order.productIds.length > 0 ? order.productIds.map(pid => {\r\n                    const product = getProductById(pid);\r\n                    if (!product) return <li key={pid}>Product ID: {pid} (Not found)</li>;\r\n                    return (\r\n                      <li key={pid} className=\"product-list-item\">\r\n                        <img src={product.imageUrl} alt={product.name} className=\"product-image\" />\r\n                        <div className=\"product-info\">\r\n                          <div className=\"product-name\">{product.name}</div>\r\n                          <div className=\"product-id\">ID: {product.id}</div>\r\n                          <div className=\"product-price\">Price: ${product.price.toFixed(2)} <br></br> Total: ${(product.price * 1).toFixed(2)}</div>\r\n                          <div className=\"product-quantity\">Quantity: 1</div>\r\n                        </div>\r\n                      </li>\r\n                    );\r\n                  }) : <li>No products found</li>)}\r\n                </ul>\r\n              </td>\r\n                <td>\r\n                  {order.shippingAddress ? (\r\n                    <div className=\"shipping-details\">\r\n                      <div><strong>Full Name:</strong> {order.shippingAddress.fullName}</div>\r\n                      <div><strong>Phone Number:</strong> {order.shippingAddress.phoneNumber}</div>\r\n                      <div><strong>Building / House No / Floor / Street:</strong> {order.shippingAddress.building}</div>\r\n                      <div><strong>Colony / Suburb / Locality / Landmark:</strong> {order.shippingAddress.colony}</div>\r\n                      <div><strong>Region:</strong> {order.shippingAddress.region}</div>\r\n                      <div><strong>City:</strong> {order.shippingAddress.city}</div>\r\n                      <div><strong>Area:</strong> {order.shippingAddress.area}</div>\r\n                      <div><strong>Address:</strong> {order.shippingAddress.address}</div>\r\n                    </div>\r\n                  ) : <div>No shipping details available.</div>}\r\n                </td>\r\n                <td>{order.id}</td>\r\n                <td>\r\n                  <div>\r\n                    <div><strong>User ID:</strong> {order.userId}</div>\r\n                    {(() => {\r\n                      const user = getUserById(order.userId);\r\n                      return (\r\n                        <>\r\n                          <div><strong>Username:</strong> {order.userUsername || user?.username || 'N/A'}</div>\r\n                          <div><strong>Email:</strong> {order.userEmail || user?.email || 'N/A'}</div>\r\n                          <div><strong>Phone (User):</strong> {order.userPhoneUser || user?.phone || 'N/A'}</div>\r\n                          <div><strong>Phone (Shipping):</strong> {order.userPhoneShipping || order.shippingAddress?.phoneNumber || 'N/A'}</div>\r\n                          \r\n                        </>\r\n                      );\r\n                    })()}\r\n                  </div>\r\n                </td>\r\n                    <td>{orderStatuses[order.id]}</td>\r\n                \r\n                <td>\r\n                  {order.productDetails ? \r\n                    `${order.productDetails.reduce((sum, item) => sum + (item.quantity || 1), 0)} items ($${order.productDetails.reduce((sum, item) => sum + ((item.quantity || 1) * (getProductById(item.id)?.price || 0)), 0).toFixed(2)})` : \r\n                    (order.productIds ? \r\n                      `${order.productIds.length} items ($${order.productIds.reduce((sum, pid) => sum + (getProductById(pid)?.price || 0), 0).toFixed(2)})` : \r\n                      '0 items ($0.00)')\r\n                  }\r\n                </td>\r\n                <td>{order.paymentMethod || 'N/A'}</td>\r\n                <td>\r\n                  {!isProfileOrders && (\r\n                    <>\r\n                      <button className=\"btn-confirm\" onClick={() => handleConfirm(order.id)}>Confirm</button>\r\n                      <button className=\"btn-cancel\" onClick={() => handleCancel(order.id)}>Cancel</button>\r\n                    </>\r\n                  )}\r\n                  {isProfileOrders && (\r\n                    <>\r\n                      {/* Remove Cancel button for user profile orders */} \r\n                    </>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getAuth } from 'firebase/auth';\r\nimport PropTypes from 'prop-types';\r\nimport './AdminOrderHistory.css'; // Ensure this CSS is specific to admin order history and does not affect profile order history\r\n\r\nconst AdminOrderHistory = ({ statusFilter, readOnly = false, isAdmin = false }) => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const auth = getAuth();\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((currentUser) => {\r\n      setUser(currentUser);\r\n    });\r\n    return () => unsubscribe();\r\n  }, [auth]);\r\n\r\n  useEffect(() => {\r\n    if (isAdmin || user) {\r\n      fetchUserOrders(user?.uid);\r\n      fetchProducts();\r\n    } else {\r\n      setOrders([]);\r\n      setLoading(false);\r\n    }\r\n  }, [user, statusFilter, isAdmin]);\r\n\r\nconst fetchUserOrders = async (userId, filterStatus) => {\r\n    try {\r\n      let url = isAdmin ? `http://localhost:5000/api/orders` : `http://localhost:5000/api/orders?userId=${userId}`;\r\n      const res = await fetch(url);\r\n      const data = await res.json();\r\n      let filteredOrders = data;\r\n      if (isAdmin) {\r\n        // For admin, always show only delivered or canceled orders\r\n        filteredOrders = data.filter(order => ['canceled', 'delivered'].includes(order.status));\r\n      } else {\r\n        if (filterStatus) {\r\n          // Filter by the selected status from dropdown\r\n          if (filterStatus === 'delivered') {\r\n            filteredOrders = data.filter(order => order.status === 'delivered');\r\n          } else if (filterStatus === 'canceled') {\r\n            filteredOrders = data.filter(order => order.status === 'canceled');\r\n          } else {\r\n            // For other statuses, we might want to implement specific filtering logic\r\n            // For now, we'll just return all orders for other statuses\r\n            filteredOrders = data;\r\n          }\r\n        } else if (statusFilter) {\r\n          // Filter by the statusFilter prop (used when component is first loaded or prop changes)\r\n          if (statusFilter === 'history') {\r\n            // Show only orders that are canceled or delivered\r\n            const historyStatuses = ['canceled', 'delivered'];\r\n            filteredOrders = data.filter(order => historyStatuses.includes(order.status));\r\n          } else if (statusFilter === 'canceled') {\r\n            filteredOrders = data.filter(order => order.status === 'canceled');\r\n          } else if (statusFilter === 'delivered') {\r\n            filteredOrders = data.filter(order => order.status === 'delivered');\r\n          } else {\r\n            filteredOrders = data.filter(order => order.status === statusFilter);\r\n          }\r\n        } else {\r\n          // No statusFilter provided, show only orders not canceled or delivered (in process)\r\n          filteredOrders = data.filter(order => order.status !== 'canceled' && order.status !== 'delivered');\r\n        }\r\n      }\r\n      setOrders(filteredOrders);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching orders:', error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/products');\r\n      const data = await res.json();\r\n      setProducts(data);\r\n    } catch (error) {\r\n      console.error('Error fetching products:', error);\r\n    }\r\n  };\r\n\r\n  const getProductById = (id) => {\r\n    return products.find(product => product.id === id);\r\n  };\r\n\r\n  const handleCancelOrder = async (orderId) => {\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/api/orders/${orderId}`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ status: 'canceled' }),\r\n      });\r\n      if (res.ok) {\r\n        setOrders(prevOrders =>\r\n          prevOrders.map(order =>\r\n            order.id === orderId ? { ...order, status: 'canceled' } : order\r\n          )\r\n        );\r\n      } else {\r\n        console.error('Failed to cancel order');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error canceling order:', error);\r\n    }\r\n  };\r\n\r\n  const handleShipOrder = async (orderId) => {\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/api/orders/${orderId}`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ status: 'shipping' }),\r\n      });\r\n      if (res.ok) {\r\n        setOrders(prevOrders =>\r\n          prevOrders.map(order =>\r\n            order.id === orderId ? { ...order, status: 'shipping' } : order\r\n          )\r\n        );\r\n      } else {\r\n        console.error('Failed to mark order as shipped');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error marking order as shipped:', error);\r\n    }\r\n  };\r\n\r\n  if (!isAdmin && !user) {\r\n    return <p>Please log in to view your orders.</p>;\r\n  }\r\n\r\n  if (loading) {\r\n    return <p>Loading your orders...</p>;\r\n  }\r\n\r\n  if (orders.length === 0) {\r\n    return <p>You have no orders.</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile-section admin-orders-section\">\r\n      <h1>\r\n        {isAdmin ? 'Admin Order History' : (\r\n          <>\r\n            {statusFilter === 'returned' && 'My Returns'}\r\n            {statusFilter === 'canceled' && 'My Cancellations'}\r\n            {statusFilter === 'history' && 'Order History'}\r\n            {!statusFilter && 'My Orders'}\r\n          </>\r\n        )}\r\n      </h1>\r\n      <div className=\"admin-filter-container\">\r\n        <label htmlFor=\"orderFilter\">Filter Orders: </label>\r\n      <select\r\n        id=\"orderFilter\"\r\n        onChange={(e) => {\r\n          const value = e.target.value;\r\n          if (value === 'dateAsc') {\r\n            setOrders((prevOrders) =>\r\n              [...prevOrders].sort((a, b) => new Date(a.orderDate) - new Date(b.orderDate))\r\n            );\r\n          } else if (value === 'dateDesc') {\r\n            setOrders((prevOrders) =>\r\n              [...prevOrders].sort((a, b) => new Date(b.orderDate) - new Date(a.orderDate))\r\n            );\r\n          } else if (value === 'delivered') {\r\n            fetchUserOrders(isAdmin ? null : user.uid, 'delivered');\r\n          } else if (value === 'canceled') {\r\n            fetchUserOrders(isAdmin ? null : user.uid, 'canceled');\r\n          } else {\r\n            fetchUserOrders(isAdmin ? null : user.uid);\r\n          }\r\n        }}\r\n      >\r\n          <option value=\"all\">All</option>\r\n          <option value=\"delivered\">Delivered</option>\r\n          <option value=\"canceled\">Canceled</option>\r\n          <option value=\"dateAsc\">Date Ascending</option>\r\n          <option value=\"dateDesc\">Date Descending</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"admin-orders-table-container\">\r\n        <table className=\"admin-orders-table\">\r\n          <thead>\r\n            <tr>\r\n              <th data-label=\"Products\">Products</th>\r\n              <th data-label=\"Shipping Details\">Shipping Details</th>\r\n              <th data-label=\"Order ID\">Order ID</th>\r\n              <th data-label=\"Status\">Status</th>\r\n              <th data-label=\"Items & Total\">Items & Total</th>\r\n              <th data-label=\"Payment Method\">Payment Method</th>\r\n              <th data-label=\"Actions\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map(order => (\r\n                <tr key={order.id} className={`admin-order-table-row admin-beautiful-row ${order.status === 'canceled' ? 'admin-canceled-row' : ''} ${order.status === 'delivered' ? 'admin-delivered-row' : ''}`}>\r\n                <td data-label=\"Products\">\r\n                  <ul className=\"admin-product-list\">\r\n                    {order.productDetails && order.productDetails.length > 0 ? order.productDetails.map(productDetail => {\r\n                      const product = getProductById(productDetail.id);\r\n                      if (!product) return <li key={productDetail.id}>Product ID: {productDetail.id} (Not found)</li>;\r\n                      return (\r\n                        <li key={productDetail.id} className=\"admin-product-list-item\">\r\n                          <img src={product.imageUrl} alt={product.name} className=\"admin-product-image\" />\r\n                          <div className=\"admin-product-info\">\r\n                            <div className=\"admin-product-name\">{product.name}</div>\r\n                            <div className=\"admin-product-id\">ID: {product.id}</div>\r\n                            <div className=\"admin-product-price\">Price: ${product.price.toFixed(2)} <br></br> Total: ${(product.price * productDetail.quantity).toFixed(2)}</div>\r\n                            <div className=\"admin-product-quantity\">Quantity: {productDetail.quantity}</div>\r\n                          </div>\r\n                        </li>\r\n                      );\r\n                    }) : (order.productIds && order.productIds.length > 0 ? order.productIds.map(pid => {\r\n                      const product = getProductById(pid);\r\n                      if (!product) return <li key={pid}>Product ID: {pid} (Not found)</li>;\r\n                      return (\r\n                        <li key={pid} className=\"admin-product-list-item\">\r\n                          <img src={product.imageUrl} alt={product.name} className=\"admin-product-image\" />\r\n                          <div className=\"admin-product-info\">\r\n                            <div className=\"admin-product-name\">{product.name}</div>\r\n                            <div className=\"admin-product-id\">ID: {product.id}</div>\r\n                            <div className=\"admin-product-price\">Price: ${product.price.toFixed(2)} <br></br> Total: ${(product.price * 1).toFixed(2)}</div>\r\n                            <div className=\"admin-product-quantity\">Quantity: 1</div>\r\n                          </div>\r\n                        </li>\r\n                      );\r\n                    }) : <li>No products found</li>)}\r\n                  </ul>\r\n                </td>\r\n                <td data-label=\"Shipping Details\">\r\n                  {order.shippingAddress ? (\r\n                    <div className=\"admin-shipping-details\">\r\n                      <div><strong>Full Name:</strong> {order.shippingAddress.fullName}</div>\r\n                      <div><strong>Phone Number:</strong> {order.shippingAddress.phoneNumber}</div>\r\n                      <div><strong>Building / House No / Floor / Street:</strong> {order.shippingAddress.building}</div>\r\n                      <div><strong>Colony / Suburb / Locality / Landmark:</strong> {order.shippingAddress.colony}</div>\r\n                      <div><strong>Region:</strong> {order.shippingAddress.region}</div>\r\n                      <div><strong>City:</strong> {order.shippingAddress.city}</div>\r\n                      <div><strong>Area:</strong> {order.shippingAddress.area}</div>\r\n                      <div><strong>Address:</strong> {order.shippingAddress.address}</div>\r\n                    </div>\r\n                  ) : <div>No shipping details available.</div>}\r\n                </td>\r\n                <td data-label=\"Order ID\">{order.id}</td>\r\n                <td data-label=\"Status\">{order.status}</td>\r\n                <td data-label=\"Items & Total\">\r\n                  {order.productDetails ? \r\n                    `${order.productDetails.reduce((sum, item) => sum + (item.quantity || 1), 0)} items ($${order.productDetails.reduce((sum, item) => sum + ((item.quantity || 1) * (getProductById(item.id)?.price || 0)), 0).toFixed(2)})` : \r\n                    (order.productIds ? \r\n                      `${order.productIds.length} items ($${order.productIds.reduce((sum, pid) => sum + (getProductById(pid)?.price || 0), 0).toFixed(2)})` : \r\n                      '0 items ($0.00)')\r\n                  }\r\n                </td>\r\n                <td data-label=\"Payment Method\">{order.paymentMethod || 'N/A'}</td>\r\n                <td data-label=\"Actions\">\r\n                      {!readOnly && (order.status === 'processing') ? (\r\n                        <>\r\n                          <button className=\"admin-btn-cancel admin-beautiful-btn\" onClick={() => handleCancelOrder(order.id)}>Cancel Order</button>\r\n                        </>\r\n                      ) : (\r\n                        order.status === 'canceled' ? <span className=\"admin-status-canceled\">Order Canceled</span> : <span className=\"admin-status-delivered\">Order {order.status.charAt(0).toUpperCase() + order.status.slice(1)}</span>\r\n                      )}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminOrderHistory;\r\n","import React from 'react';\r\n\r\nconst CancelOrders = ({ orders, products, users, onDeleteOrder }) => {\r\n  const getUserById = (id) => {\r\n    if (!users || users.length === 0) return null;\r\n    return users.find(user => user.uid === id);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Cancelled Orders</h1>\r\n      {orders.length === 0 ? (\r\n        <p>No canceled orders found.</p>\r\n      ) : (\r\n        <table className=\"orders-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Products</th>\r\n              <th>Shipping Details</th>\r\n              <th>Order ID</th>\r\n              <th>User ID</th>\r\n              <th>Status</th>\r\n              \r\n              <th>Quantity</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map(order => (\r\n              <tr key={order.id} className=\"order-table-row\">\r\n                <td>\r\n                  <ul className=\"product-list\">\r\n                    {order.productDetails && order.productDetails.length > 0 ? order.productDetails.map(productDetail => {\r\n                      const product = products.find(p => p.id === productDetail.id);\r\n                      if (!product) return <li key={productDetail.id}>Product ID: {productDetail.id} (Not found)</li>;\r\n                      return (\r\n                        <li key={productDetail.id} className=\"product-list-item\">\r\n                          <img src={product.imageUrl} alt={product.name} className=\"product-image\" />\r\n                          <div className=\"product-info\">\r\n                            <div className=\"product-name\">{product.name}</div>\r\n                            <div className=\"product-id\">ID: {product.id}</div>\r\n                          <div className=\"product-price\">Price: ${product.price.toFixed(2)} <br></br> Total: ${(product.price * productDetail.quantity).toFixed(2)}</div>\r\n                            <div className=\"product-quantity\">Quantity: {productDetail.quantity}</div>\r\n                          </div>\r\n                        </li>\r\n                      );\r\n                    }) : (order.productIds && order.productIds.length > 0 ? order.productIds.map(pid => {\r\n                      const product = products.find(p => p.id === pid);\r\n                      if (!product) return <li key={pid}>Product ID: {pid} (Not found)</li>;\r\n                      return (\r\n                        <li key={pid} className=\"product-list-item\">\r\n                          <img src={product.imageUrl} alt={product.name} className=\"product-image\" />\r\n                          <div className=\"product-info\">\r\n                            <div className=\"product-name\">{product.name}</div>\r\n                            <div className=\"product-id\">ID: {product.id}</div>\r\n                            <div className=\"product-price\">Price: ${product.price.toFixed(2)} <br></br> Total: ${(product.price * 1).toFixed(2)}</div>\r\n                            <div className=\"product-quantity\">Quantity: 1</div>\r\n                          </div>\r\n                        </li>\r\n                      );\r\n                    }) : <li>No products found</li>)}\r\n                  </ul>\r\n                </td>\r\n                <td>\r\n                  {order.shippingAddress ? (\r\n                    <div className=\"shipping-details\">\r\n                      <div><strong>Full Name:</strong> {order.shippingAddress.fullName}</div>\r\n                      <div><strong>Phone Number:</strong> {order.shippingAddress.phoneNumber}</div>\r\n                      <div><strong>Building / House No / Floor / Street:</strong> {order.shippingAddress.building}</div>\r\n                      <div><strong>Colony / Suburb / Locality / Landmark:</strong> {order.shippingAddress.colony}</div>\r\n                      <div><strong>Region:</strong> {order.shippingAddress.region}</div>\r\n                      <div><strong>City:</strong> {order.shippingAddress.city}</div>\r\n                      <div><strong>Area:</strong> {order.shippingAddress.area}</div>\r\n                      <div><strong>Address:</strong> {order.shippingAddress.address}</div>\r\n                    </div>\r\n                  ) : <div>No shipping details available.</div>}\r\n                </td>\r\n                <td>{order.id}</td>\r\n                <td>\r\n                  <div>\r\n                    <div><strong>User ID:</strong> {order.userId}</div>\r\n                    {(() => {\r\n                      const user = getUserById(order.userId);\r\n                      return user ? (\r\n                        <>\r\n                          <div><strong>Email:</strong> {user.email || 'N/A'}</div>\r\n                          <div><strong>Phone:</strong> {user.phone || 'N/A'}</div>\r\n                          <div><strong>Username:</strong> {user.username || 'N/A'}</div>\r\n                        </>\r\n                      ) : (\r\n                        <div>User details not found</div>\r\n                      );\r\n                    })()}\r\n                  </div>\r\n                </td>\r\n                <td>{order.status}</td>\r\n               \r\n                <td>\r\n                  {order.productDetails ? \r\n                    `${order.productDetails.reduce((sum, item) => sum + (item.quantity || 1), 0)} items ($${order.productDetails.reduce((sum, item) => sum + ((item.quantity || 1) * (products.find(p => p.id === item.id)?.price || 0)), 0).toFixed(2)})` : \r\n                    (order.productIds ? \r\n                      `${order.productIds.length} items ($${order.productIds.reduce((sum, pid) => sum + (products.find(p => p.id === pid)?.price || 0), 0).toFixed(2)})` : \r\n                      '0 items ($0.00)')\r\n                  }\r\n                </td>\r\n                <td>\r\n                  {/* Delete button removed as per user request */}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CancelOrders;\r\n","import React from 'react';\r\n\r\nconst DeliveredOrders = ({ products, orders, refreshOrders }) => {\r\n  const getProductById = (id) => {\r\n    if (!products || products.length === 0) return null;\r\n    return products.find(product => product.id === id);\r\n  };\r\n\r\n  if (!orders) {\r\n    return <p>Loading delivered orders...</p>;\r\n  }\r\n\r\n  if (orders.length === 0) {\r\n    return <p>No delivered orders found.</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Delivered Orders</h1>\r\n      <table className=\"orders-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Products</th>\r\n            <th>Shipping Details</th>\r\n            <th>Order ID</th>\r\n            <th>User ID</th>\r\n            <th>Status</th>\r\n        \r\n            <th>Quantity</th>\r\n            <th>Payment Method</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {orders.map(order => (\r\n            <tr key={order.id}>\r\n              <td>\r\n                <ul className=\"product-list\">\r\n                  {order.productDetails && order.productDetails.length > 0 ? order.productDetails.map(productDetail => {\r\n                    const product = getProductById(productDetail.id);\r\n                    if (!product) return <li key={productDetail.id}>Product ID: {productDetail.id} (Not found)</li>;\r\n                    return (\r\n                      <li key={productDetail.id} className=\"product-list-item\">\r\n                        <img src={product.imageUrl} alt={product.name} className=\"product-image\" />\r\n                        <div className=\"product-info\">\r\n                          <div className=\"product-name\">{product.name}</div>\r\n                          <div className=\"product-id\">ID: {product.id}</div>\r\n                          <div className=\"product-price\">Price: ${product.price.toFixed(2)} <br></br> Total: ${(product.price * productDetail.quantity).toFixed(2)}</div>\r\n                          <div className=\"product-quantity\">Quantity: {productDetail.quantity}</div>\r\n                        </div>\r\n                      </li>\r\n                    );\r\n                  }) : (order.productIds && order.productIds.length > 0 ? order.productIds.map(pid => {\r\n                    const product = getProductById(pid);\r\n                    if (!product) return <li key={pid}>Product ID: {pid} (Not found)</li>;\r\n                    return (\r\n                      <li key={pid} className=\"product-list-item\">\r\n                        <img src={product.imageUrl} alt={product.name} className=\"product-image\" />\r\n                        <div className=\"product-info\">\r\n                          <div className=\"product-name\">{product.name}</div>\r\n                          <div className=\"product-id\">ID: {product.id}</div>\r\n                          <div className=\"product-price\">Price: ${product.price.toFixed(2)} <br></br> Total: ${(product.price * 1).toFixed(2)}</div>\r\n                          <div className=\"product-quantity\">Quantity: 1</div>\r\n                        </div>\r\n                      </li>\r\n                    );\r\n                  }) : <li>No products found</li>)}\r\n                </ul>\r\n              </td>\r\n              <td>\r\n                {order.shippingAddress ? (\r\n                  <div className=\"shipping-details\">\r\n                    <div><strong>Full Name:</strong> {order.shippingAddress.fullName}</div>\r\n                    <div><strong>Phone Number:</strong> {order.shippingAddress.phoneNumber}</div>\r\n                    <div><strong>Building / House No / Floor / Street:</strong> {order.shippingAddress.building}</div>\r\n                    <div><strong>Colony / Suburb / Locality / Landmark:</strong> {order.shippingAddress.colony}</div>\r\n                    <div><strong>Region:</strong> {order.shippingAddress.region}</div>\r\n                    <div><strong>City:</strong> {order.shippingAddress.city}</div>\r\n                    <div><strong>Area:</strong> {order.shippingAddress.area}</div>\r\n                    <div><strong>Address:</strong> {order.shippingAddress.address}</div>\r\n                  </div>\r\n                ) : <div>No shipping address</div>}\r\n              </td>\r\n              <td>{order.id}</td>\r\n              <td>{order.userId}</td>\r\n              <td>{order.status}</td>\r\n           \r\n              <td>\r\n                {order.productDetails ? \r\n                  `${order.productDetails.reduce((sum, item) => sum + (item.quantity || 1), 0)} items ($${order.productDetails.reduce((sum, item) => sum + ((item.quantity || 1) * (getProductById(item.id)?.price || 0)), 0).toFixed(2)})` : \r\n                  (order.productIds ? \r\n                    `${order.productIds.length} items ($${order.productIds.reduce((sum, pid) => sum + (getProductById(pid)?.price || 0), 0).toFixed(2)})` : \r\n                    '0 items ($0.00)')\r\n                }\r\n              </td>\r\n              <td>{order.paymentMethod || 'N/A'}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeliveredOrders;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nconst AdminConfirmedOrders = ({ products, users }) => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showShipModal, setShowShipModal] = useState(false);\r\n  const [selectedOrderId, setSelectedOrderId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchConfirmedOrders();\r\n  }, []);\r\n\r\n  const fetchConfirmedOrders = async () => {\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/orders');\r\n      const data = await res.json();\r\n      const confirmedOrders = data.filter(order => order.status === 'confirmed');\r\n      setOrders(confirmedOrders);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching confirmed orders:', error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getProductById = (id) => {\r\n    if (!products || products.length === 0) return null;\r\n    return products.find(product => product.id === id);\r\n  };\r\n\r\n  const getUserById = (id) => {\r\n    if (!users || users.length === 0) return null;\r\n    return users.find(user => user.id === id);\r\n  };\r\n\r\n  const updateOrderStatus = async (orderId, newStatus) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/orders/${orderId}`, {\r\n        method: 'PATCH',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ status: newStatus }),\r\n      });\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        console.error('Failed to update order status:', response.status, errorText);\r\n        throw new Error(`Failed to update order status: ${response.status} ${errorText}`);\r\n      }\r\n      fetchConfirmedOrders();\r\n    } catch (error) {\r\n      console.error('Error updating order status:', error);\r\n      alert('Failed to update order status');\r\n    }\r\n  };\r\n\r\n  const handleCancel = (orderId) => {\r\n    if (window.confirm('Are you sure you want to cancel this order?')) {\r\n      updateOrderStatus(orderId, 'canceled');\r\n    }\r\n  };\r\n\r\n  const openShipModal = (orderId) => {\r\n    setSelectedOrderId(orderId);\r\n    setShowShipModal(true);\r\n  };\r\n\r\n  const closeShipModal = () => {\r\n    setSelectedOrderId(null);\r\n    setShowShipModal(false);\r\n  };\r\n\r\n  const confirmShip = () => {\r\n    if (selectedOrderId) {\r\n      updateOrderStatus(selectedOrderId, 'shipping');\r\n      closeShipModal();\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <p>Loading confirmed orders...</p>;\r\n  }\r\n\r\n  if (orders.length === 0) {\r\n    return <p>No confirmed orders found.</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Confirmed Orders</h1>\r\n      <table className=\"orders-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Products</th>\r\n            <th>Shipping Details</th>\r\n            <th>Order ID</th>\r\n            <th>User ID</th>\r\n            <th>Status</th>\r\n            <th>Price</th>\r\n          \r\n            <th>Payment Method</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {orders.map(order => (\r\n            <tr key={order.id}>\r\n              <td>\r\n                <ul className=\"product-list\">\r\n                  {order.productDetails && order.productDetails.length > 0 ? order.productDetails.map(productDetail => {\r\n                    const product = getProductById(productDetail.id);\r\n                    if (!product) return <li key={productDetail.id}>Product ID: {productDetail.id} (Not found)</li>;\r\n                    return (\r\n                      <li key={productDetail.id} className=\"product-list-item\">\r\n                        <img src={product.imageUrl} alt={product.name} className=\"product-image\" />\r\n                        <div className=\"product-info\">\r\n                          <div className=\"product-name\">{product.name}</div>\r\n                          <div className=\"product-id\">ID: {product.id}</div>\r\n                          <div className=\"product-price\">price: ${product.price.toFixed(2)} <br></br> Total: ${(product.price * productDetail.quantity).toFixed(2)}</div>\r\n                          <div className=\"product-quantity\">Quantity: {productDetail.quantity}</div>\r\n                        </div>\r\n                      </li>\r\n                    );\r\n                  }) : (order.productIds && order.productIds.length > 0 ? order.productIds.map(pid => {\r\n                    const product = getProductById(pid);\r\n                    if (!product) return <li key={pid}>Product ID: {pid} (Not found)</li>;\r\n                    return (\r\n                      <li key={pid} className=\"product-list-item\">\r\n                        <img src={product.imageUrl} alt={product.name} className=\"product-image\" />\r\n                        <div className=\"product-info\">\r\n                          <div className=\"product-name\">{product.name}</div>\r\n                          <div className=\"product-id\">ID: {product.id}</div>\r\n                          <div className=\"product-price\">Price: ${product.price.toFixed(2)} <br></br> Total: ${(product.price * 1).toFixed(2)}</div>\r\n                          <div className=\"product-quantity\">Quantity: 1</div>\r\n                        </div>\r\n                      </li>\r\n                    );\r\n                  }) : <li>No products found</li>)}\r\n                </ul>\r\n              </td>\r\n              <td>\r\n                {order.shippingAddress ? (\r\n                  <div className=\"shipping-details\">\r\n                    <div><strong>Full Name:</strong> {order.shippingAddress.fullName}</div>\r\n                    <div><strong>Phone Number:</strong> {order.shippingAddress.phoneNumber}</div>\r\n                    <div><strong>Building / House No / Floor / Street:</strong> {order.shippingAddress.building}</div>\r\n                    <div><strong>Colony / Suburb / Locality / Landmark:</strong> {order.shippingAddress.colony}</div>\r\n                    <div><strong>Region:</strong> {order.shippingAddress.region}</div>\r\n                    <div><strong>City:</strong> {order.shippingAddress.city}</div>\r\n                    <div><strong>Area:</strong> {order.shippingAddress.area}</div>\r\n                    <div><strong>Address:</strong> {order.shippingAddress.address}</div>\r\n                  </div>\r\n                ) : <div>No shipping address</div>}\r\n              </td>\r\n              <td>{order.id}</td>\r\n              <td>\r\n                <div>\r\n                  <div><strong>User ID:</strong> {order.userId}</div>\r\n                  {(() => {\r\n                    const user = getUserById(order.userId);\r\n                    return user ? (\r\n                      <>\r\n                        <div><strong>Email:</strong> {user.email || 'N/A'}</div>\r\n                        <div><strong>Phone:</strong> {user.phone || 'N/A'}</div>\r\n                        <div><strong>Username:</strong> {user.username || 'N/A'}</div>\r\n                      </>\r\n                    ) : (\r\n                      <div>User details not found</div>\r\n                    );\r\n                  })()}\r\n                </div>\r\n              </td>\r\n              <td>{order.status}</td>\r\n             \r\n              <td>\r\n                {order.productDetails ? \r\n                  `${order.productDetails.reduce((sum, item) => sum + (item.quantity || 1), 0)} items ($${order.productDetails.reduce((sum, item) => sum + ((item.quantity || 1) * (getProductById(item.id)?.price || 0)), 0).toFixed(2)})` : \r\n                  (order.productIds ? \r\n                    `${order.productIds.length} items ($${order.productIds.reduce((sum, pid) => sum + (getProductById(pid)?.price || 0), 0).toFixed(2)})` : \r\n                    '0 items ($0.00)')\r\n                }\r\n              </td>\r\n              <td>{order.paymentMethod || 'N/A'}</td>\r\n              <td>\r\n                <button className=\"btn-cancel\" onClick={() => handleCancel(order.id)}>Cancel</button>\r\n                <button className=\"btn-shipped beautiful-btn enhanced-btn\" onClick={() => openShipModal(order.id)}>Shipped</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {showShipModal && (\r\n        <div className=\"modal-overlay beautiful-modal-overlay\">\r\n          <div className=\"modal-content beautiful-modal-content\">\r\n            <h3>Confirm Shipping</h3>\r\n            <p>Are you sure you want to mark this order as shipped?</p>\r\n            <div className=\"modal-buttons\">\r\n              <button className=\"btn-confirm beautiful-btn-confirm\" onClick={confirmShip}>Yes</button>\r\n              <button className=\"btn-cancel beautiful-btn-cancel\" onClick={closeShipModal}>No</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminConfirmedOrders;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nconst AdminShippedOrders = ({ products, onOrderStatusChange }) => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showDeliveredModal, setShowDeliveredModal] = useState(false);\r\n  const [showCancelModal, setShowCancelModal] = useState(false);\r\n  const [selectedOrderId, setSelectedOrderId] = useState(null);\r\n  const [modalType, setModalType] = useState(null); // 'cancel' or 'delivered'\r\n\r\n  useEffect(() => {\r\n    fetchShippedOrders();\r\n  }, []);\r\n\r\n  const fetchShippedOrders = async () => {\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/orders');\r\n      const data = await res.json();\r\n      const shippedOrders = data.filter(order => order.status === 'shipping' || order.status === 'shipped');\r\n      setOrders(shippedOrders);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching shipped orders:', error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getProductById = (id) => {\r\n    if (!products || products.length === 0) return null;\r\n    return products.find(product => product.id === id);\r\n  };\r\n\r\n  const updateOrderStatus = async (orderId, newStatus) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/orders/${orderId}`, {\r\n        method: 'PATCH',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ status: newStatus }),\r\n      });\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        console.error('Failed to update order status:', response.status, errorText);\r\n        throw new Error(`Failed to update order status: ${response.status} ${errorText}`);\r\n      }\r\n      // Refresh orders after update\r\n      fetchShippedOrders();\r\n      if (onOrderStatusChange) {\r\n        onOrderStatusChange();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating order status:', error);\r\n      alert('Failed to update order status');\r\n    }\r\n  };\r\n\r\n  const openModal = (orderId, type) => {\r\n    setSelectedOrderId(orderId);\r\n    setModalType(type);\r\n    if (type === 'cancel') {\r\n      setShowCancelModal(true);\r\n    } else if (type === 'delivered') {\r\n      setShowDeliveredModal(true);\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setSelectedOrderId(null);\r\n    setModalType(null);\r\n    setShowCancelModal(false);\r\n    setShowDeliveredModal(false);\r\n  };\r\n\r\n  const confirmAction = () => {\r\n    if (selectedOrderId && modalType) {\r\n      if (modalType === 'cancel') {\r\n        updateOrderStatus(selectedOrderId, 'canceled');\r\n      } else if (modalType === 'delivered') {\r\n        updateOrderStatus(selectedOrderId, 'delivered');\r\n      }\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <p>Loading shipped orders...</p>;\r\n  }\r\n\r\n  if (orders.length === 0) {\r\n    return <p>No shipped orders found.</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Shipped Orders</h1>\r\n      <table className=\"orders-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Products</th>\r\n            <th>Shipping Details</th>\r\n            <th>Order ID</th>\r\n            <th>User ID</th>\r\n            <th>Status</th>\r\n          \r\n            <th>Quantity</th>\r\n            <th>Payment Method</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {orders.map(order => (\r\n            <tr key={order.id}>\r\n              <td>\r\n                <ul className=\"product-list\">\r\n                  {order.productDetails && order.productDetails.length > 0 ? order.productDetails.map(productDetail => {\r\n                    const product = getProductById(productDetail.id);\r\n                    if (!product) return <li key={productDetail.id}>Product ID: {productDetail.id} (Not found)</li>;\r\n                    return (\r\n                      <li key={productDetail.id} className=\"product-list-item\">\r\n                        <img src={product.imageUrl} alt={product.name} className=\"product-image\" />\r\n                        <div className=\"product-info\">\r\n                          <div className=\"product-name\">{product.name}</div>\r\n                          <div className=\"product-id\">ID: {product.id}</div>\r\n                          <div className=\"product-price\">Price: ${product.price.toFixed(2)} <br></br> Total: ${(product.price * productDetail.quantity).toFixed(2)}</div>\r\n                          <div className=\"product-quantity\">Quantity: {productDetail.quantity}</div>\r\n                        </div>\r\n                      </li>\r\n                    );\r\n                  }) : (order.productIds && order.productIds.length > 0 ? order.productIds.map(pid => {\r\n                    const product = getProductById(pid);\r\n                    if (!product) return <li key={pid}>Product ID: {pid} (Not found)</li>;\r\n                    return (\r\n                      <li key={pid} className=\"product-list-item\">\r\n                        <img src={product.imageUrl} alt={product.name} className=\"product-image\" />\r\n                        <div className=\"product-info\">\r\n                          <div className=\"product-name\">{product.name}</div>\r\n                          <div className=\"product-id\">ID: {product.id}</div>\r\n                          <div className=\"product-price\">Price: ${product.price.toFixed(2)} <br></br> Total: ${(product.price * 1).toFixed(2)}</div>\r\n                          <div className=\"product-quantity\">Quantity: 1</div>\r\n                        </div>\r\n                      </li>\r\n                    );\r\n                  }) : <li>No products found</li>)}\r\n                </ul>\r\n              </td>\r\n              <td>\r\n                {order.shippingAddress ? (\r\n                  <div className=\"shipping-details\">\r\n                    <div><strong>Full Name:</strong> {order.shippingAddress.fullName}</div>\r\n                    <div><strong>Phone Number:</strong> {order.shippingAddress.phoneNumber}</div>\r\n                    <div><strong>Building / House No / Floor / Street:</strong> {order.shippingAddress.building}</div>\r\n                    <div><strong>Colony / Suburb / Locality / Landmark:</strong> {order.shippingAddress.colony}</div>\r\n                    <div><strong>Region:</strong> {order.shippingAddress.region}</div>\r\n                    <div><strong>City:</strong> {order.shippingAddress.city}</div>\r\n                    <div><strong>Area:</strong> {order.shippingAddress.area}</div>\r\n                    <div><strong>Address:</strong> {order.shippingAddress.address}</div>\r\n                  </div>\r\n                ) : <div>No shipping address</div>}\r\n              </td>\r\n              <td>{order.id}</td>\r\n              <td>{order.userId}</td>\r\n              <td>{order.status}</td>\r\n             \r\n              <td>\r\n                {order.productDetails ? \r\n                  `${order.productDetails.reduce((sum, item) => sum + (item.quantity || 1), 0)} items ($${order.productDetails.reduce((sum, item) => sum + ((item.quantity || 1) * (getProductById(item.id)?.price || 0)), 0).toFixed(2)})` : \r\n                  (order.productIds ? \r\n                    `${order.productIds.length} items ($${order.productIds.reduce((sum, pid) => sum + (getProductById(pid)?.price || 0), 0).toFixed(2)})` : \r\n                    '0 items ($0.00)')\r\n                }\r\n              </td>\r\n              <td>{order.paymentMethod || 'N/A'}</td>\r\n              <td>\r\n                <button className=\"btn-cancel beautiful-btn\" onClick={() => openModal(order.id, 'cancel')}>Cancel</button>\r\n                <button className=\"btn-delivered beautiful-btn\" onClick={() => openModal(order.id, 'delivered')}>Delivered</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {showCancelModal && (\r\n        <div className=\"modal-overlay beautiful-modal-overlay\">\r\n          <div className=\"modal-content beautiful-modal-content\">\r\n            <h3>Confirm Cancel</h3>\r\n            <p>Are you sure you want to cancel this order?</p>\r\n            <div className=\"modal-buttons\">\r\n              <button className=\"btn-confirm beautiful-btn-confirm\" onClick={confirmAction}>Yes</button>\r\n              <button className=\"btn-cancel beautiful-btn-cancel\" onClick={closeModal}>No</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {showDeliveredModal && (\r\n        <div className=\"modal-overlay beautiful-modal-overlay\">\r\n          <div className=\"modal-content beautiful-modal-content\">\r\n            <h3>Confirm Delivery</h3>\r\n            <p>Are you sure you want to mark this order as delivered?</p>\r\n            <div className=\"modal-buttons\">\r\n              <button className=\"btn-confirm beautiful-btn-confirm\" onClick={confirmAction}>Yes</button>\r\n              <button className=\"btn-cancel beautiful-btn-cancel\" onClick={closeModal}>No</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminShippedOrders;\r\n","import React from 'react';\r\n\r\nconst CustomTooltip = ({ active, payload, label, coordinate }) => {\r\n  if (!active || !payload || !payload.length) {\r\n    return null;\r\n  }\r\n\r\n  const tooltipStyle = {\r\n    position: 'absolute',\r\n    left: coordinate ? coordinate.x + 20 : 0,\r\n    top: coordinate ? coordinate.y - 50 : 0,\r\n    zIndex: 9999,\r\n    pointerEvents: 'none',\r\n  };\r\n\r\n  return (\r\n    <div className=\"recharts-tooltip-wrapper\" style={tooltipStyle}>\r\n      <div className=\"custom-tooltip\">\r\n        <div className=\"tooltip-header\">\r\n          <h4 className=\"tooltip-title\">{label}</h4>\r\n        </div>\r\n        <div className=\"tooltip-content\">\r\n          {payload.map((entry, index) => (\r\n            <div key={index} className=\"tooltip-item\">\r\n              <span className=\"tooltip-label\">{entry.name}:</span>\r\n              <span className=\"tooltip-value\">{entry.value}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomTooltip;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer,\r\n  PieChart, Pie, Cell, BarChart, Bar\r\n} from 'recharts';\r\nimport './Dashboard.css';\r\nimport CustomTooltip from '../components/CustomTooltip';\r\n\r\nconst COLORS = ['#FFBB28', '#FF8042', '#FFB347', '#FFA07A'];\r\n\r\nconst timeRanges = [\r\n  { label: 'Last 7 Days', value: 7 },\r\n  { label: 'Last 15 Days', value: 15 },\r\n  { label: 'Last 1 Month', value: 30 },\r\n  { label: 'Last 6 Months', value: 180 },\r\n  { label: 'Last 1 Year', value: 365 },\r\n];\r\n\r\nconst trafficSources = [\r\n  { name: 'Direct Traffic', value: 40 },\r\n  { name: 'Organic Search', value: 30 },\r\n  { name: 'Social Media', value: 15 },\r\n  { name: 'Referral Traffic', value: 10 },\r\n  { name: 'Email Campaigns', value: 5 },\r\n];\r\n\r\nconst topCategories = [\r\n  { name: 'Electronics', value: 1200000 },\r\n  { name: 'Fashion', value: 950000 },\r\n  { name: 'Home & Kitchen', value: 750000 },\r\n  { name: 'Beauty & Personal Care', value: 500000 },\r\n];\r\n\r\nconst conversionData = [\r\n  { name: 'Product Views', value: 25000, change: 9 },\r\n  { name: 'Add to Cart', value: 12000, change: 6 },\r\n  { name: 'Proceed to Checkout', value: 8500, change: 4 },\r\n  { name: 'Completed Purchases', value: 6200, change: 7 },\r\n  { name: 'Abandoned Carts', value: 3000, change: -5 },\r\n];\r\n\r\nconst activeUsersByCountry = [\r\n  { country: 'United States', percent: 36 },\r\n  { country: 'United Kingdom', percent: 24 },\r\n  { country: 'Indonesia', percent: 17.5 },\r\n  { country: 'Russia', percent: 15 },\r\n];\r\n\r\nconst Dashboard = ({ products = [] }) => {\r\n  const [totalSales, setTotalSales] = useState(0);\r\n  const [previousTotalSales, setPreviousTotalSales] = useState(0);\r\n  const [totalDeliveredSales, setTotalDeliveredSales] = useState(0);\r\n  const [previousTotalDeliveredSales, setPreviousTotalDeliveredSales] = useState(0);\r\n  const [previousProductCount, setPreviousProductCount] = useState(0);\r\n  const [productChangePercentage, setProductChangePercentage] = useState(0);\r\n  const [totalSalesChange, setTotalSalesChange] = useState(0);\r\n  const [totalOrders, setTotalOrders] = useState(0);\r\n  const [previousTotalOrders, setPreviousTotalOrders] = useState(0);\r\n  const [totalOrdersChange, setTotalOrdersChange] = useState(0);\r\n  const [totalVisitors, setTotalVisitors] = useState(0);\r\n  const [previousTotalVisitors, setPreviousTotalVisitors] = useState(0);\r\n  const [totalVisitorsChange, setTotalVisitorsChange] = useState(0);\r\n  const [totalDeliveredSalesChange, setTotalDeliveredSalesChange] = useState(0);\r\n  const [fullRevenueData, setFullRevenueData] = useState([]);\r\n  const [revenueData, setRevenueData] = useState([]);\r\n  const [selectedRange, setSelectedRange] = useState(7);\r\n\r\n  // Store full revenue data when received from server\r\n  useEffect(() => {\r\n    if (revenueData.length > 0 && fullRevenueData.length === 0) {\r\n      setFullRevenueData(revenueData);\r\n    }\r\n  }, [revenueData, fullRevenueData]);\r\n\r\n  // Filter fullRevenueData based on selectedRange\r\n  useEffect(() => {\r\n    if (fullRevenueData.length > 0) {\r\n      const filteredData = fullRevenueData.slice(-selectedRange);\r\n      setRevenueData(filteredData);\r\n    }\r\n  }, [selectedRange, fullRevenueData]);\r\n  const [monthlyTarget, setMonthlyTarget] = useState({ percent: 0, change: 0, target: 0, revenue: 0 });\r\n  const [activeUsers, setActiveUsers] = useState(0);\r\n  const [activeUsersChange, setActiveUsersChange] = useState(0);\r\n  const [activeUsersByCountry, setActiveUsersByCountry] = useState([]);\r\n  const [conversionRateData, setConversionRateData] = useState([]);\r\n  const [topCategories, setTopCategories] = useState([]);\r\n  const [trafficData, setTrafficData] = useState([]);\r\n\r\n  // Calculate product change percentage whenever products change\r\n  useEffect(() => {\r\n    const currentProductCount = products.length;\r\n    if (previousProductCount !== 0) {\r\n      const change = ((currentProductCount - previousProductCount) / previousProductCount) * 100;\r\n      setProductChangePercentage(change);\r\n    }\r\n    setPreviousProductCount(currentProductCount);\r\n  }, [products]);\r\n\r\n  // Calculate percentage change function\r\n  const calculatePercentageChange = (current, previous) => {\r\n    if (previous === 0) return 0;\r\n    return ((current - previous) / previous) * 100;\r\n  };\r\n\r\n  // Real-time updates simulation using SSE\r\n  useEffect(() => {\r\n    const eventSource = new EventSource('http://localhost:5000/api/realtime-dashboard');\r\n    eventSource.onmessage = (e) => {\r\n      const data = JSON.parse(e.data);\r\n      \r\n      // Store previous values before updating\r\n      setPreviousTotalSales(totalSales);\r\n      setPreviousTotalDeliveredSales(totalDeliveredSales);\r\n      setPreviousTotalOrders(totalOrders);\r\n      setPreviousTotalVisitors(totalVisitors);\r\n\r\n      // Update current values\r\n      if (data.totalSales !== undefined) setTotalSales(data.totalSales);\r\n      if (data.totalDeliveredSales !== undefined) setTotalDeliveredSales(data.totalDeliveredSales);\r\n      if (data.totalOrders !== undefined) setTotalOrders(data.totalOrders);\r\n      if (data.totalVisitors !== undefined) setTotalVisitors(data.totalVisitors);\r\n      if (data.revenueData !== undefined) setRevenueData(data.revenueData);\r\n      if (data.monthlyTarget !== undefined) setMonthlyTarget(data.monthlyTarget);\r\n      if (data.activeUsers !== undefined) setActiveUsers(data.activeUsers);\r\n      if (data.activeUsersByCountry !== undefined) setActiveUsersByCountry(data.activeUsersByCountry);\r\n      if (data.conversionRateData !== undefined) setConversionRateData(data.conversionRateData);\r\n      if (data.topCategories !== undefined) setTopCategories(data.topCategories);\r\n      if (data.trafficData !== undefined) setTrafficData(data.trafficData);\r\n\r\n      // Calculate percentage changes dynamically\r\n      if (data.totalSales !== undefined && previousTotalSales !== 0) {\r\n        setTotalSalesChange(calculatePercentageChange(data.totalSales, previousTotalSales));\r\n      }\r\n      if (data.totalDeliveredSales !== undefined && previousTotalDeliveredSales !== 0) {\r\n        setTotalDeliveredSalesChange(calculatePercentageChange(data.totalDeliveredSales, previousTotalDeliveredSales));\r\n      }\r\n      if (data.totalOrders !== undefined && previousTotalOrders !== 0) {\r\n        setTotalOrdersChange(calculatePercentageChange(data.totalOrders, previousTotalOrders));\r\n      }\r\n      if (data.totalVisitors !== undefined && previousTotalVisitors !== 0) {\r\n        setTotalVisitorsChange(calculatePercentageChange(data.totalVisitors, previousTotalVisitors));\r\n      }\r\n      if (data.activeUsers !== undefined && activeUsers !== 0) {\r\n        setActiveUsersChange(calculatePercentageChange(data.activeUsers, activeUsers));\r\n      }\r\n\r\n      // Fix: Ensure values update correctly even if 0\r\n      if (data.activeUsers === 0) setActiveUsers(0);\r\n    };\r\n    return () => {\r\n      eventSource.close();\r\n    };\r\n  }, [totalSales, totalDeliveredSales, totalOrders, totalVisitors, activeUsers, previousTotalSales, previousTotalDeliveredSales, previousTotalOrders, previousTotalVisitors]);\r\n\r\n  const handleRangeChange = (e) => {\r\n    const days = parseInt(e.target.value, 10);\r\n    setSelectedRange(days);\r\n  };\r\n\r\n  const monthlyProgress = (monthlyTarget.revenue / monthlyTarget.target) * 100;\r\n\r\n  // Filter revenueData based on selectedRange\r\n  const filteredRevenueData = revenueData.slice(-selectedRange);\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2 className=\"dashboard-title\">Dashboard</h2>\r\n      <div className=\"metrics-grid\">\r\n        <div className=\"metric-card\">\r\n          <div className=\"metric-title\">Total Products</div>\r\n          <div className=\"metric-value\">{products.length}</div>\r\n          <div className=\"metric-change\">{productChangePercentage.toFixed(2)}% change</div>\r\n        </div>\r\n        <div className=\"metric-card\">\r\n          <div className=\"metric-title\">Total Sales</div>\r\n          <div className=\"metric-value\">${totalSales.toLocaleString()}</div>\r\n          <div className={`metric-change ${totalSalesChange >= 0 ? '' : 'negative'}`}>\r\n            {totalSalesChange >= 0 ? '+' : ''}{totalSalesChange.toFixed(2)}% vs last week\r\n          </div>\r\n        </div>\r\n        <div className=\"metric-card\">\r\n          <div className=\"metric-title\">Total Delivered Sales</div>\r\n          <div className=\"metric-value\">{totalDeliveredSales.toLocaleString()}</div>\r\n          <div className={`metric-change ${totalDeliveredSalesChange >= 0 ? '' : 'negative'}`}>\r\n            {totalDeliveredSalesChange >= 0 ? '+' : ''}{totalDeliveredSalesChange.toFixed(2)}% vs last week\r\n          </div>\r\n        </div>\r\n        <div className=\"metric-card\">\r\n          <div className=\"metric-title\">Total Orders</div>\r\n          <div className=\"metric-value\">{totalOrders.toLocaleString()}</div>\r\n          <div className={`metric-change ${totalOrdersChange >= 0 ? '' : 'negative'}`}>\r\n            {totalOrdersChange >= 0 ? '+' : ''}{totalOrdersChange.toFixed(2)}% vs last week\r\n          </div>\r\n        </div>\r\n        <div className=\"metric-card\">\r\n          <div className=\"metric-title\">Total Visitors</div>\r\n          <div className=\"metric-value\">{totalVisitors.toLocaleString()}</div>\r\n          <div className={`metric-change ${totalVisitorsChange >= 0 ? '' : 'negative'}`}>\r\n            {totalVisitorsChange >= 0 ? '+' : ''}{totalVisitorsChange.toFixed(2)}% vs last week\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"revenue-analytics\">\r\n        <div className=\"revenue-analytics-header\">\r\n          <div className=\"revenue-analytics-title\">Revenue Analytics</div>\r\n          <select className=\"time-range-selector-enhanced\" value={selectedRange} onChange={handleRangeChange}>\r\n            {timeRanges.map(range => (\r\n              <option key={range.value} value={range.value}>{range.label}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <ResponsiveContainer width=\"100%\" height={250}>\r\n          <LineChart data={filteredRevenueData}>\r\n            <defs>\r\n              <linearGradient id=\"colorRevenue\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor=\"#ff8042\" stopOpacity={0.8}/>\r\n                <stop offset=\"95%\" stopColor=\"#ffbb28\" stopOpacity={0.2}/>\r\n              </linearGradient>\r\n              <linearGradient id=\"colorOrders\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor=\"#ffbb28\" stopOpacity={0.8}/>\r\n                <stop offset=\"95%\" stopColor=\"#ff8042\" stopOpacity={0.2}/>\r\n              </linearGradient>\r\n              <filter id=\"shadow\" height=\"130%\">\r\n                <feDropShadow dx=\"0\" dy=\"0\" stdDeviation=\"3\" floodColor=\"#888\" floodOpacity=\"0.5\"/>\r\n              </filter>\r\n            </defs>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"date\" />\r\n            <YAxis />\r\n            <Tooltip content={<CustomTooltip />} />\r\n            <Legend />\r\n            <Line\r\n              type=\"monotone\"\r\n              dataKey=\"revenue\"\r\n              stroke=\"url(#colorRevenue)\"\r\n              strokeWidth={4}\r\n              dot={{ stroke: '#ffbb28', strokeWidth: 3, r: 6, fill: '#ff8042' }}\r\n              activeDot={{ r: 10, stroke: '#ffbb28', strokeWidth: 3, fill: '#ff8042' }}\r\n              animationDuration={2000}\r\n              animationEasing=\"ease-in-out\"\r\n              filter=\"url(#shadow)\"\r\n            />\r\n            <Line\r\n              type=\"monotone\"\r\n              dataKey=\"orders\"\r\n              stroke=\"url(#colorOrders)\"\r\n              strokeDasharray=\"5 5\"\r\n              strokeWidth={4}\r\n              dot={{ stroke: '#ff8042', strokeWidth: 3, r: 6, fill: '#ffbb28' }}\r\n              activeDot={{ r: 10, stroke: '#ff8042', strokeWidth: 3, fill: '#ffbb28' }}\r\n              animationDuration={2000}\r\n              animationEasing=\"ease-in-out\"\r\n              filter=\"url(#shadow)\"\r\n            />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n\r\n      <div className=\"progress-section\">\r\n        <div className=\"progress-card\">\r\n          <h3 className=\"progress-title\">Active Users</h3>\r\n          <div className=\"progress-value\">{activeUsers.toLocaleString()}</div>\r\n          <div className={`progress-change ${activeUsersChange >= 0 ? '' : 'negative'}`}>\r\n            {activeUsersChange >= 0 ? '+' : ''}{activeUsersChange.toFixed(2)}% from last month\r\n          </div>\r\n          {activeUsersByCountry.map((country, index) => (\r\n            <div key={country.country} className=\"progress-item\">\r\n              <div className=\"progress-label\">\r\n                <span className=\"progress-label-text\">{country.country}</span>\r\n                <span className=\"progress-label-percent\">{country.percent}%</span>\r\n              </div>\r\n              <div className=\"progress-bar-container\">\r\n                <div className=\"progress-bar\" style={{ width: `${country.percent}%` }} />\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"progress-card\">\r\n          <h3 className=\"progress-title\">Monthly Target</h3>\r\n          <div className=\"progress-value\">{monthlyProgress.toFixed(0)}%</div>\r\n          <div className={`progress-change ${monthlyTarget.change >= 0 ? '' : 'negative'}`}>\r\n            {monthlyTarget.change >= 0 ? '+' : ''}{monthlyTarget.change.toFixed(2)}% from last month\r\n          </div>\r\n          <div className=\"progress-message\">\r\n            Great Progress! 🎉<br />\r\n            Our achievement increased by $200,000; let's reach 100% next month.\r\n          </div>\r\n          <div className=\"target-container\">\r\n            <div className=\"target-item\">\r\n              <div>Target</div>\r\n              <div className=\"target-value\">${monthlyTarget.target.toLocaleString()}</div>\r\n            </div>\r\n            <div className=\"target-item\">\r\n              <div>Revenue</div>\r\n              <div className=\"target-value\">${monthlyTarget.revenue.toLocaleString()}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"conversion-grid\">\r\n        {conversionRateData.map(item => (\r\n          <div className=\"conversion-item\" key={item.name}>\r\n            <div className=\"conversion-value\">{item.value.toLocaleString()}</div>\r\n            <div className=\"conversion-label\">{item.name}</div>\r\n            <div className={`conversion-change ${item.change >= 0 ? 'positive' : 'negative'}`}>\r\n              {item.change >= 0 ? '+' : ''}{item.change}%\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"charts-row\">\r\n        <div className=\"pie-chart-container\">\r\n          <h3 className=\"chart-title\">Top Categories</h3>\r\n          <ResponsiveContainer width=\"100%\" height={200}>\r\n            <PieChart>\r\n              <Pie\r\n                data={topCategories}\r\n                dataKey=\"value\"\r\n                nameKey=\"name\"\r\n                cx=\"50%\"\r\n                cy=\"50%\"\r\n                outerRadius={70}\r\n                fill=\"#ff8042\"\r\n                label\r\n              >\r\n                {topCategories.map((entry, index) => (\r\n                  <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                ))}\r\n              </Pie>\r\n            </PieChart>\r\n          </ResponsiveContainer>\r\n          <div className=\"categories-list\">\r\n            {topCategories.map(cat => (\r\n              <div key={cat.name} className=\"category-item\">\r\n                <div>{cat.name}</div>\r\n                <div>${cat.value.toLocaleString()}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bar-chart-container\">\r\n          <h3 className=\"chart-title\">Traffic Sources</h3>\r\n          <ResponsiveContainer width=\"100%\" height={200}>\r\n            <BarChart data={trafficData}>\r\n            <Bar dataKey=\"value\" fill=\"#ff8042\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip content={<CustomTooltip />} />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n          <div className=\"traffic-list\">\r\n            {trafficData.map(source => (\r\n              <div key={source.name} className=\"traffic-item\">\r\n                <div>{source.name}</div>\r\n                <div>{source.value}%</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport '../components/BannerForm.css';\r\n\r\nconst BannerForm = ({ onClose, onSave, initialData }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [imageFile, setImageFile] = useState(null);\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [buttonText, setButtonText] = useState('');\r\n  const [tags, setTags] = useState([]);\r\n  const [tagInput, setTagInput] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (initialData) {\r\n      setTitle(initialData.title || '');\r\n      setDescription(initialData.description || '');\r\n      setImageUrl(initialData.imageUrl || '');\r\n      setButtonText(initialData.buttonText || '');\r\n      setTags(initialData.tags || []);\r\n    }\r\n  }, [initialData]);\r\n\r\n  const handleAddTag = () => {\r\n    const newTag = tagInput.trim();\r\n    if (newTag && !tags.includes(newTag)) {\r\n      setTags([...tags, newTag]);\r\n      setTagInput('');\r\n    }\r\n  };\r\n\r\n  const handleRemoveTag = (tagToRemove) => {\r\n    setTags(tags.filter(tag => tag !== tagToRemove));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!title || !description) {\r\n      alert('Please fill in all required fields.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // For editing, we need to handle both file upload and direct URL updates\r\n      if (imageFile) {\r\n        // If a new file is uploaded, we need to upload it first\r\n        const uploadFormData = new FormData();\r\n        uploadFormData.append('image', imageFile);\r\n        \r\n        const uploadResponse = await fetch('http://localhost:5000/api/upload', {\r\n          method: 'POST',\r\n          body: uploadFormData,\r\n        });\r\n\r\n        if (!uploadResponse.ok) {\r\n          throw new Error('Failed to upload image');\r\n        }\r\n\r\n        const uploadResult = await uploadResponse.json();\r\n        const bannerData = {\r\n          title,\r\n          description,\r\n          buttonText,\r\n          tags,\r\n          imageUrl: uploadResult.imageUrl\r\n        };\r\n        onSave(bannerData);\r\n      } else if (imageUrl) {\r\n        // For new banners or edits without file upload, send the data directly\r\n        const bannerData = {\r\n          title,\r\n          description,\r\n          buttonText,\r\n          tags,\r\n          imageUrl: imageUrl\r\n        };\r\n        onSave(bannerData);\r\n      } else {\r\n        alert('Please either upload an image or provide an image URL.');\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving banner:', error);\r\n      alert('Failed to save banner. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"banner-form-overlay\">\r\n      <div className=\"banner-form-container\">\r\n        <h2>{initialData ? 'Edit Banner' : 'Add New Banner'}</h2>\r\n        <form onSubmit={handleSubmit} className=\"banner-form\">\r\n          <label>\r\n            Title<span className=\"required\">*</span>:\r\n            <input\r\n              type=\"text\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            Description<span className=\"required\">*</span>:\r\n            <textarea\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            Image Upload{!initialData && <span className=\"required\">*</span>}:\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              onChange={(e) => setImageFile(e.target.files[0])}\r\n              required={!initialData}\r\n            />\r\n            {imageUrl && !imageFile && (\r\n              <div className=\"current-image\">\r\n                <p>Current image:</p>\r\n                <img src={imageUrl} alt=\"Current banner\" style={{ width: '100px', height: '60px', objectFit: 'cover' }} />\r\n              </div>\r\n            )}\r\n          </label>\r\n          <label>\r\n            Button Text:\r\n            <input\r\n              type=\"text\"\r\n              value={buttonText}\r\n              onChange={(e) => setButtonText(e.target.value)}\r\n            />\r\n          </label>\r\n          <label>\r\n            Tags:\r\n            <div className=\"tags-input-container\">\r\n              <input\r\n                type=\"text\"\r\n                value={tagInput}\r\n                onChange={(e) => setTagInput(e.target.value)}\r\n                placeholder=\"Add a tag\"\r\n              />\r\n              <button type=\"button\" className=\"btn-add-tag\" onClick={handleAddTag}>+</button>\r\n            </div>\r\n            <div className=\"tags-list\">\r\n              {tags.map(tag => (\r\n                <span key={tag} className=\"tag-item\" onClick={() => alert(`Search for tag: ${tag}`)}>\r\n                  {tag} &times;\r\n                  <button type=\"button\" className=\"btn-remove-tag\" onClick={() => handleRemoveTag(tag)}>x</button>\r\n                </span>\r\n              ))}\r\n            </div>\r\n          </label>\r\n          <div className=\"banner-form-buttons\">\r\n            <button type=\"submit\" className=\"btn-save\">{initialData ? 'Update' : 'Save'}</button>\r\n            <button type=\"button\" className=\"btn-cancel\" onClick={onClose}>Cancel</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BannerForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../components/BannerManagement.css';\r\nimport BannerForm from './BannerForm';\r\n\r\nconst BannerManagement = () => {\r\n  const [banners, setBanners] = useState([]);\r\n  const [showAddForm, setShowAddForm] = useState(false);\r\n  const [editingBanner, setEditingBanner] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch banners on component mount\r\n  useEffect(() => {\r\n    fetchBanners();\r\n  }, []);\r\n\r\n  const fetchBanners = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get('http://localhost:5000/api/banner');\r\n      setBanners(response.data);\r\n      setError(null);\r\n    } catch (err) {\r\n      console.error('Error fetching banners:', err);\r\n      setError('Failed to load banners');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAddBanner = async (bannerData) => {\r\n    try {\r\n      await axios.post('http://localhost:5000/api/banner', bannerData);\r\n      setShowAddForm(false);\r\n      fetchBanners();\r\n    } catch (err) {\r\n      console.error('Error adding banner:', err);\r\n      alert('Failed to add banner');\r\n    }\r\n  };\r\n\r\n  const handleUpdateBanner = async (bannerData) => {\r\n    try {\r\n      await axios.patch(`http://localhost:5000/api/banner/${editingBanner.id}`, bannerData);\r\n      setEditingBanner(null);\r\n      fetchBanners();\r\n    } catch (err) {\r\n      console.error('Error updating banner:', err);\r\n      alert('Failed to update banner. Please check if the backend server is running.');\r\n    }\r\n  };\r\n\r\n  const handleDeleteBanner = async (id) => {\r\n    if (window.confirm('Are you sure you want to delete this banner?')) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/banner/${id}`);\r\n        fetchBanners();\r\n      } catch (err) {\r\n        console.error('Error deleting banner:', err);\r\n        alert('Failed to delete banner');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEditClick = (banner) => {\r\n    setEditingBanner(banner);\r\n    setShowAddForm(true);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading banners...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"error\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"banner-management-container\">\r\n      <h1>Banner Management</h1>\r\n      \r\n      <div className=\"banner-actions\">\r\n        <button \r\n          className=\"btn-add-banner\" \r\n          onClick={() => {\r\n            setEditingBanner(null);\r\n            setShowAddForm(true);\r\n          }}\r\n        >\r\n          Add New Banner\r\n        </button>\r\n      </div>\r\n\r\n      {showAddForm && (\r\n        <BannerForm\r\n          onClose={() => {\r\n            setShowAddForm(false);\r\n            setEditingBanner(null);\r\n          }}\r\n          onSave={editingBanner ? handleUpdateBanner : handleAddBanner}\r\n          initialData={editingBanner}\r\n        />\r\n      )}\r\n\r\n      <div className=\"banners-list\">\r\n        <h2>Current Banners ({banners.length})</h2>\r\n        {banners.length === 0 ? (\r\n          <p>No banners found. Add your first banner!</p>\r\n        ) : (\r\n          <div className=\"banners-grid\">\r\n            {banners.map((banner) => (\r\n              <div key={banner.id} className=\"banner-card\">\r\n                <img \r\n                  src={banner.imageUrl} \r\n                  alt={banner.title} \r\n                  className=\"banner-preview\"\r\n                  onError={(e) => {\r\n                    e.target.src = '/images/banner/default.jpg';\r\n                  }}\r\n                />\r\n                <div className=\"banner-info\">\r\n                  <h3>{banner.title}</h3>\r\n                  <p>{banner.description}</p>\r\n                  <div className=\"banner-tags\">\r\n                    {banner.tags?.map((tag, index) => (\r\n                      <span key={index} className=\"tag\">{tag}</span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n                <div className=\"banner-actions\">\r\n                  <button \r\n                    className=\"btn-edit\" \r\n                    onClick={() => handleEditClick(banner)}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button \r\n                    className=\"btn-delete\" \r\n                    onClick={() => handleDeleteBanner(banner.id)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BannerManagement;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './ProductDetailsModal.css';\r\n\r\nconst ProductDetailsModal = ({ product, onClose, onUpdate }) => {\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    description: '',\r\n    price: '',\r\n    previousPrice: '',\r\n    stock: '',\r\n    maxBuyers: '',\r\n    maxPerPerson: '',\r\n    tier: 'Cheap',\r\n    status: 'Active',\r\n    imageUrl: '',\r\n    images: [],\r\n    videos: [],\r\n    tags: [],\r\n    categories: []\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [tagInput, setTagInput] = useState('');\r\n  const [categoryInput, setCategoryInput] = useState('');\r\n  const [videoInput, setVideoInput] = useState('');\r\n\r\n  const categoriesOptions = [\r\n    'Fashion',\r\n    'Electronics',\r\n    'Home & Garden',\r\n    'Books',\r\n    'Sports & Outdoors',\r\n    'Health & Beauty',\r\n    'Food & Grocery',\r\n    'Toys & Games',\r\n    'Automotive'\r\n  ].filter(Boolean);\r\n\r\n  const statusOptions = ['Active', 'Draft', 'Scheduled'];\r\n\r\n  useEffect(() => {\r\n    if (product) {\r\n      setForm({\r\n        name: product.name || '',\r\n        description: product.description || '',\r\n        price: product.price || '',\r\n        previousPrice: product.previousPrice || '',\r\n        stock: product.stock || '',\r\n        maxBuyers: product.maxBuyers || '',\r\n        maxPerPerson: product.maxPerPerson || '',\r\n        tier: product.tier || 'Cheap',\r\n        status: product.status || 'Active',\r\n        imageUrl: product.imageUrl || '',\r\n        images: Array.isArray(product.images) ? product.images : [],\r\n        videos: Array.isArray(product.videos) ? product.videos : [],\r\n        tags: Array.isArray(product.tags) ? product.tags : [],\r\n        categories: Array.isArray(product.categories) ? product.categories : []\r\n      });\r\n    }\r\n  }, [product]);\r\n\r\n  const handleInputChange = (e) => {\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleAddTag = () => {\r\n    const newTag = tagInput.trim();\r\n    if (newTag && !form.tags.includes(newTag)) {\r\n      setForm(prevForm => ({\r\n        ...prevForm,\r\n        tags: [...prevForm.tags, newTag]\r\n      }));\r\n      setTagInput('');\r\n    }\r\n  };\r\n\r\n  const handleRemoveTag = (tagToRemove) => {\r\n    setForm(prevForm => ({\r\n      ...prevForm,\r\n      tags: prevForm.tags.filter(tag => tag !== tagToRemove)\r\n    }));\r\n  };\r\n\r\n  const handleAddCategory = (category) => {\r\n    if (category && !form.categories.includes(category)) {\r\n      setForm(prevForm => ({\r\n        ...prevForm,\r\n        categories: [...prevForm.categories, category]\r\n      }));\r\n      setCategoryInput('');\r\n    }\r\n  };\r\n\r\n  const handleRemoveCategory = (categoryToRemove) => {\r\n    setForm(prevForm => ({\r\n      ...prevForm,\r\n      categories: prevForm.categories.filter(cat => cat !== categoryToRemove)\r\n    }));\r\n  };\r\n\r\n  const handleAddVideo = () => {\r\n    const newVideo = videoInput.trim();\r\n    if (newVideo && !form.videos.includes(newVideo)) {\r\n      setForm(prevForm => ({\r\n        ...prevForm,\r\n        videos: [...prevForm.videos, newVideo]\r\n      }));\r\n      setVideoInput('');\r\n    }\r\n  };\r\n\r\n  const handleRemoveVideo = (videoToRemove) => {\r\n    setForm(prevForm => ({\r\n      ...prevForm,\r\n      videos: prevForm.videos.filter(video => video !== videoToRemove)\r\n    }));\r\n  };\r\n\r\n  const handleImageChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/api/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n      setForm(prevForm => ({ ...prevForm, imageUrl: res.data.imageUrl }));\r\n    } catch (error) {\r\n      console.error('Error uploading image:', error);\r\n      alert('Failed to upload image. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleMultipleImagesChange = async (e) => {\r\n    const files = Array.from(e.target.files);\r\n    if (!files.length) return;\r\n    \r\n    setLoading(true);\r\n    try {\r\n      const uploadedImages = [];\r\n      \r\n      for (const file of files) {\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n        const res = await axios.post('http://localhost:5000/api/upload', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          }\r\n        });\r\n        uploadedImages.push(res.data.imageUrl);\r\n      }\r\n      \r\n      setForm(prevForm => ({\r\n        ...prevForm,\r\n        images: [...prevForm.images, ...uploadedImages]\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error uploading images:', error);\r\n      alert('Failed to upload some images. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRemoveImage = (indexToRemove) => {\r\n    setForm(prevForm => ({\r\n      ...prevForm,\r\n      images: prevForm.images.filter((_, index) => index !== indexToRemove)\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!form.name || !form.description || !form.price || !form.stock) {\r\n      alert('Name, description, price, and stock are required');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/products/${product.id}`, {\r\n        name: form.name,\r\n        description: form.description,\r\n        price: parseFloat(form.price),\r\n        previousPrice: form.previousPrice ? parseFloat(form.previousPrice) : null,\r\n        stock: parseInt(form.stock, 10),\r\n        maxBuyers: form.maxBuyers ? parseInt(form.maxBuyers, 10) : null,\r\n        maxPerPerson: form.maxPerPerson ? parseInt(form.maxPerPerson, 10) : null,\r\n        tier: form.tier,\r\n        status: form.status,\r\n        imageUrl: form.imageUrl, // Main image\r\n        images: form.images, // All images in array\r\n        videos: form.videos,\r\n        tags: form.tags,\r\n        categories: form.categories\r\n      });\r\n\r\n      onUpdate();\r\n      onClose();\r\n    } catch (error) {\r\n      console.error('Error updating product:', error);\r\n      alert('Failed to update product. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (!product) return null;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\" onClick={onClose}>\r\n      <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\r\n        <div className=\"modal-header\">\r\n          <h2>Edit Product: {product.name}</h2>\r\n          <button className=\"close-button\" onClick={onClose}>×</button>\r\n        </div>\r\n        \r\n        <form onSubmit={handleSubmit} className=\"product-form\">\r\n          <div className=\"form-section\">\r\n            <h3>Basic Information</h3>\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group\">\r\n                <label>Product Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={form.name}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Product ID</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={product.id}\r\n                  disabled\r\n                  className=\"disabled-input\"\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label>Description</label>\r\n              <textarea\r\n                name=\"description\"\r\n                value={form.description}\r\n                onChange={handleInputChange}\r\n                rows=\"3\"\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"form-row\">\r\n              <div className=\"form-group\">\r\n                <label>Previous Price ($)</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"previousPrice\"\r\n                  value={form.previousPrice}\r\n                  onChange={handleInputChange}\r\n                  step=\"0.01\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Price ($)</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"price\"\r\n                  value={form.price}\r\n                  onChange={handleInputChange}\r\n                  step=\"0.01\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Stock</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"stock\"\r\n                  value={form.stock}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group\">\r\n                <label>Max Buyers</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"maxBuyers\"\r\n                  value={form.maxBuyers}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Leave blank for Unlimited\"\r\n                />\r\n                <div style={{ marginTop: '5px', fontSize: '12px', color: '#666' }}>\r\n                  {form.stock ? `Only ${form.stock} left in stock` : 'Out of stock'}\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Max Per Person</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"maxPerPerson\"\r\n                  value={form.maxPerPerson}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Leave blank for Unlimited\"\r\n                />\r\n                <div style={{ marginTop: '5px', fontSize: '12px', color: '#666' }}>\r\n                  Max Per Person: {form.maxPerPerson || form.maxPerPerson === 0 ? form.maxPerPerson : 'Unlimited'}\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Tier</label>\r\n                <select\r\n                  name=\"tier\"\r\n                  value={form.tier}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                >\r\n                  <option value=\"Cheap\">Cheap</option>\r\n                  <option value=\"Medium\">Medium</option>\r\n                  <option value=\"Premium\">Premium</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Status</label>\r\n                <select\r\n                  name=\"status\"\r\n                  value={form.status}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                >\r\n                  {statusOptions.map((status) => (\r\n                    <option key={status} value={status}>{status}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-section\">\r\n            <h3>Images</h3>\r\n            <div className=\"form-group\">\r\n              <label>Main Image</label>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={handleImageChange}\r\n              />\r\n              {form.imageUrl && (\r\n                <img\r\n                  src={form.imageUrl}\r\n                  alt=\"Main preview\"\r\n                  className=\"image-preview\"\r\n                />\r\n              )}\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label>Additional Images (Multiple)</label>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                multiple\r\n                onChange={handleMultipleImagesChange}\r\n                disabled={loading}\r\n              />\r\n              <div className=\"images-grid\">\r\n                {form.images && form.images.map((image, index) => (\r\n                  <div key={index} className=\"image-item\">\r\n                    <img src={image} alt={`Additional ${index + 1}`} />\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"remove-image\"\r\n                      onClick={() => handleRemoveImage(index)}\r\n                    >\r\n                      ×\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-section\">\r\n            <h3>Videos</h3>\r\n            <div className=\"form-group\">\r\n              <label>Add Video Links (YouTube, Vimeo, etc.)</label>\r\n              <div className=\"input-with-button\">\r\n                <input\r\n                  type=\"url\"\r\n                  placeholder=\"https://youtube.com/watch?v=...\"\r\n                  value={videoInput}\r\n                  onChange={(e) => setVideoInput(e.target.value)}\r\n                  onKeyDown={(e) => {\r\n                    if (e.key === 'Enter') {\r\n                      e.preventDefault();\r\n                      handleAddVideo();\r\n                    }\r\n                  }}\r\n                />\r\n                <button type=\"button\" onClick={handleAddVideo}>\r\n                  Add Video\r\n                </button>\r\n              </div>\r\n              <div className=\"videos-list\">\r\n                {form.videos && form.videos.map((video, index) => (\r\n                  <div key={index} className=\"video-item\">\r\n                    <span>{video}</span>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"remove-video\"\r\n                      onClick={() => handleRemoveVideo(video)}\r\n                    >\r\n                      ×\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-section\">\r\n            <h3>Categories & Tags</h3>\r\n            <div className=\"form-group\">\r\n              <label>Categories</label>\r\n              <div className=\"input-with-button\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter category\"\r\n                  value={categoryInput}\r\n                  onChange={(e) => setCategoryInput(e.target.value)}\r\n                  list=\"categorySuggestions\"\r\n                />\r\n                <datalist id=\"categorySuggestions\">\r\n                  {categoriesOptions.map((cat, idx) => (\r\n                    <option key={idx} value={cat} />\r\n                  ))}\r\n                </datalist>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => handleAddCategory(categoryInput)}\r\n                >\r\n                  Add Category\r\n                </button>\r\n              </div>\r\n              <div className=\"categories-list\">\r\n                {form.categories && form.categories.map((cat, index) => (\r\n                  <span key={index} className=\"category-tag\">\r\n                    {cat}\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => handleRemoveCategory(cat)}\r\n                    >\r\n                      ×\r\n                    </button>\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Tags</label>\r\n              <div className=\"input-with-button\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter tag\"\r\n                  value={tagInput}\r\n                  onChange={(e) => setTagInput(e.target.value)}\r\n                  onKeyDown={(e) => {\r\n                    if (e.key === 'Enter') {\r\n                      e.preventDefault();\r\n                      handleAddTag();\r\n                    }\r\n                  }}\r\n                />\r\n                <button type=\"button\" onClick={handleAddTag}>\r\n                  Add Tag\r\n                </button>\r\n              </div>\r\n              <div className=\"tags-list\">\r\n                {form.tags && form.tags.map((tag, index) => (\r\n                  <span key={index} className=\"tag-item\">\r\n                    {tag}\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => handleRemoveTag(tag)}\r\n                    >\r\n                      ×\r\n                    </button>\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-actions\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              className=\"cancel-button\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={loading}\r\n              className=\"save-button\"\r\n            >\r\n              {loading ? 'Saving...' : 'Save Changes'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductDetailsModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './AdminPanel.css';\r\n\r\nimport AdminNavBar from './AdminNavBar';\r\nimport AdminMessages from './AdminMessages';\r\nimport Orders from './Orders';\r\n\r\nimport OrderHistory from './OrderHistory';\r\nimport CancelOrders from './CancelOrders';\r\nimport DeliveredOrders from './DeliveredOrders';\r\nimport ConfirmedOrders from './ConfirmedOrders';\r\nimport AdminConfirmedOrders from './AdminConfirmedOrders';\r\nimport AdminShippedOrders from './AdminShippedOrders';\r\nimport Dashboard from './Dashboard';\r\nimport BannerManagement from './BannerManagement';\r\nimport ProductDetailsModal from './ProductDetailsModal';\r\n\r\nimport { BannerContext } from '../contexts/BannerContext';\r\nimport BannerForm from './BannerForm';\r\n\r\n// Icon components for better UI\r\nconst IconDashboard = () => <span className=\"icon\">📊</span>;\r\nconst IconProducts = () => <span className=\"icon\">📦</span>;\r\nconst IconUsers = () => <span className=\"icon\">👥</span>;\r\nconst IconMessages = () => <span className=\"icon\">💬</span>;\r\nconst IconOrders = () => <span className=\"icon\">📋</span>;\r\nconst IconHistory = () => <span className=\"icon\">📚</span>;\r\nconst IconDelivered = () => <span className=\"icon\">✅</span>;\r\nconst IconShipped = () => <span className=\"icon\">🚚</span>;\r\nconst IconCancel = () => <span className=\"icon\">❌</span>;\r\nconst IconConfirmed = () => <span className=\"icon\">✔️</span>;\r\nconst IconUpdate = () => <span className=\"icon\">🔄</span>;\r\nconst IconAdd = () => <span className=\"icon\">➕</span>;\r\nconst IconFilter = () => <span className=\"icon\">🔍</span>;\r\nconst IconSeeAll = () => <span className=\"icon\">👁️</span>;\r\nconst IconDetails = () => <span className=\"icon\">📄</span>;\r\nconst IconDelete = () => <span className=\"icon\">🗑️</span>;\r\nconst IconSearch = () => <span className=\"icon\">🔎</span>;\r\n\r\nconst AdminPanel = () => {\r\n  const [activeSection, setActiveSection] = useState('products');\r\n  const [products, setProducts] = useState([]);\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    description: '',\r\n    price: '',\r\n    previousPrice: '',\r\n    stock: '',\r\n    maxBuyers: '',\r\n    maxPerPerson: '',\r\n    tier: 'Cheap',\r\n    status: 'Active',\r\n    imageUrls: [],\r\n    videos: [],\r\n    tags: [],\r\n    categories: []\r\n  });\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const [productId, setProductId] = useState('');\r\n  const [showAddProductForm, setShowAddProductForm] = useState(false);\r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n  const [showProductDetailsModal, setShowProductDetailsModal] = useState(false);\r\n\r\n\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n\r\n  // Update filteredProducts when searchTerm or products change\r\n  useEffect(() => {\r\n    if (!searchTerm) {\r\n      setFilteredProducts(products);\r\n    } else {\r\n      const lowerSearch = searchTerm.toLowerCase();\r\n      const filtered = products.filter(product =>\r\n        (product.id && product.id.toLowerCase().includes(lowerSearch)) ||\r\n        (product.name && product.name.toLowerCase().includes(lowerSearch))\r\n      );\r\n      setFilteredProducts(filtered);\r\n    }\r\n  }, [searchTerm, products]);\r\n\r\n  const categoriesOptions = [\r\n    'Fashion',\r\n    'Electronics',\r\n    'Home & Garden',\r\n    'Books',\r\n    'Sports & Outdoors',\r\n    'Health & Beauty',\r\n    'Food & Grocery',\r\n    'Toys & Games',\r\n    'Automotive'\r\n  ].filter(Boolean);\r\n\r\n  const statusOptions = ['Active', 'Draft', 'Scheduled'];\r\n\r\n  const [categoryInput, setCategoryInput] = useState('');\r\n  const [categorySuggestions, setCategorySuggestions] = useState([]);\r\n  const [showCategorySuggestions, setShowCategorySuggestions] = useState(false);\r\n\r\n  const handleCategoryInputChange = (e) => {\r\n    const value = e.target.value;\r\n    setCategoryInput(value);\r\n    if (value.length > 0) {\r\n      const filtered = categoriesOptions.filter(cat =>\r\n        cat.toLowerCase().includes(value.toLowerCase()) &&\r\n        !form.categories.includes(cat)\r\n      );\r\n      setCategorySuggestions(filtered);\r\n      setShowCategorySuggestions(true);\r\n    } else {\r\n      setShowCategorySuggestions(false);\r\n    }\r\n  };\r\n\r\n  const handleCategorySuggestionClick = (category) => {\r\n    handleAddCategory(category);\r\n  };\r\n\r\n  // Function to generate unique 6-digit product ID\r\n  const generateUniqueProductId = () => {\r\n    let newId;\r\n    const existingIds = new Set(products && products.length > 0 ? products.map(p => p.id) : []);\r\n    do {\r\n      newId = Math.floor(100000 + Math.random() * 900000).toString();\r\n    } while (existingIds.has(newId));\r\n    return newId;\r\n  };\r\n\r\n  // Generate product ID when form is shown\r\n  useEffect(() => {\r\n    if (showAddProductForm) {\r\n      const newId = generateUniqueProductId();\r\n      setProductId(newId);\r\n    }\r\n  }, [showAddProductForm]);\r\n\r\n  // Handler to regenerate product ID\r\n  const handleRegenerateId = () => {\r\n    const newId = generateUniqueProductId();\r\n    setProductId(newId);\r\n  };\r\n\r\n  const handleAddCategory = (category) => {\r\n    if (category && !form.categories.includes(category)) {\r\n      setForm(prevForm => ({\r\n        ...prevForm,\r\n        categories: [...prevForm.categories, category]\r\n      }));\r\n      setCategoryInput('');\r\n      setShowCategorySuggestions(false);\r\n    }\r\n  };\r\n\r\n  const handleRemoveCategory = (categoryToRemove) => {\r\n    setForm(prevForm => ({\r\n      ...prevForm,\r\n      categories: prevForm.categories.filter(cat => cat !== categoryToRemove)\r\n    }));\r\n  };\r\n\r\n  const [tagInput, setTagInput] = useState('');\r\n  const [videoInput, setVideoInput] = useState('');\r\n\r\n  const handleAddTag = () => {\r\n    const newTag = tagInput.trim();\r\n    if (newTag && !form.tags.includes(newTag)) {\r\n      setForm(prevForm => ({\r\n        ...prevForm,\r\n        tags: [...prevForm.tags, newTag]\r\n      }));\r\n      setTagInput('');\r\n    }\r\n  };\r\n\r\n  const handleRemoveTag = (tagToRemove) => {\r\n    setForm(prevForm => ({\r\n      ...prevForm,\r\n      tags: prevForm.tags.filter(tag => tag !== tagToRemove)\r\n    }));\r\n  };\r\n\r\n  const handleTagInputChange = (e) => {\r\n    setTagInput(e.target.value);\r\n  };\r\n\r\n  const handleAddVideo = () => {\r\n    const newVideo = videoInput.trim();\r\n    if (newVideo && !form.videos.includes(newVideo)) {\r\n      setForm(prevForm => ({\r\n        ...prevForm,\r\n        videos: [...prevForm.videos, newVideo]\r\n      }));\r\n      setVideoInput('');\r\n    }\r\n  };\r\n\r\n  const handleRemoveVideo = (videoToRemove) => {\r\n    setForm(prevForm => ({\r\n      ...prevForm,\r\n      videos: prevForm.videos.filter(video => video !== videoToRemove)\r\n    }));\r\n  };\r\n\r\n  const [stockInput, setStockInput] = useState('');\r\n  const [statusInput, setStatusInput] = useState('Active');\r\n\r\n  const [isAuthenticated, setIsAuthenticated] = useState(() => {\r\n    // Initialize from localStorage\r\n    const storedAuth = localStorage.getItem('adminIsAuthenticated');\r\n    return storedAuth === 'true';\r\n  });\r\n  const [loginForm, setLoginForm] = useState({ username: '', password: '' });\r\n  const [loginError, setLoginError] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      localStorage.setItem('adminIsAuthenticated', 'true');\r\n      fetchProducts();\r\n      fetchUsers();\r\n      fetchMessages();\r\n      fetchOrders();\r\n    } else {\r\n      localStorage.removeItem('adminIsAuthenticated');\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:5000/api/products');\r\n      console.log('Fetched products:', res.data);\r\n      setProducts(res.data);\r\n    } catch (error) {\r\n      console.error('Error fetching products:', error);\r\n    }\r\n  };\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:5000/api/users');\r\n      console.log('Fetched users:', res.data);\r\n      setUsers(res.data);\r\n    } catch (error) {\r\n      console.error('Error fetching users:', error);\r\n    }\r\n  };\r\n\r\n  const fetchMessages = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:5000/api/messages');\r\n      console.log('Fetched messages:', res.data);\r\n      setMessages(res.data);\r\n    } catch (error) {\r\n      console.error('Error fetching messages:', error);\r\n    }\r\n  };\r\n\r\n  const [orders, setOrders] = useState([]);\r\n  const [processingOrders, setProcessingOrders] = useState([]);\r\n  const [confirmedOrders, setConfirmedOrders] = useState([]);\r\n  const [canceledOrders, setCanceledOrders] = useState([]);\r\n  const [orderHistory, setOrderHistory] = useState([]);\r\n  const [shippedOrders, setShippedOrders] = useState([]);\r\n  const [deliveredOrders, setDeliveredOrders] = useState([]);\r\n\r\n  const fetchOrders = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:5000/api/orders');\r\n      console.log('Fetched orders:', res.data);\r\n      setOrders(res.data);\r\n      // Separate orders by status\r\n      const processing = res.data.filter(order => order.status.toLowerCase() === 'pending' || order.status.toLowerCase() === 'processing');\r\n      const confirmed = res.data.filter(order => order.status.toLowerCase() === 'confirmed');\r\n      const canceled = res.data.filter(order => order.status.toLowerCase() === 'canceled');\r\n      const history = res.data.filter(order => ['returned', 'cancelled', 'cancel'].includes(order.status.toLowerCase()));\r\n      const shipped = res.data.filter(order => order.status.toLowerCase() === 'shipping' || order.status.toLowerCase() === 'shipped');\r\n      const delivered = res.data.filter(order => order.status.toLowerCase() === 'delivered');\r\n      setProcessingOrders(processing);\r\n      setConfirmedOrders(confirmed);\r\n      setCanceledOrders(canceled);\r\n      setOrderHistory(history);\r\n      setShippedOrders(shipped);\r\n      setDeliveredOrders(delivered);\r\n    } catch (error) {\r\n      console.error('Error fetching orders:', error);\r\n    }\r\n  };\r\n\r\n  // Fix: fetch products after adding a product to update product list with new productId\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const handleInputChange = (e) => {\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleStockChange = (e) => {\r\n    setStockInput(e.target.value);\r\n    setForm(prevForm => ({\r\n      ...prevForm,\r\n      stock: e.target.value\r\n    }));\r\n  };\r\n\r\n  const handleStatusChange = (e) => {\r\n    setStatusInput(e.target.value);\r\n    setForm(prevForm => ({\r\n      ...prevForm,\r\n      status: e.target.value\r\n    }));\r\n  };\r\n\r\n  const handleImageChange = async (e) => {\r\n    const files = Array.from(e.target.files);\r\n    if (!files.length) return;\r\n    \r\n    const uploadedUrls = [];\r\n    \r\n    for (const file of files) {\r\n      const formData = new FormData();\r\n      formData.append('image', file);\r\n      try {\r\n        const res = await axios.post('http://localhost:5000/api/upload', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          }\r\n        });\r\n        uploadedUrls.push(res.data.imageUrl);\r\n      } catch (error) {\r\n        console.error('Error uploading image:', error);\r\n        alert(`Failed to upload image: ${file.name}. Please try again.`);\r\n      }\r\n    }\r\n    \r\n    if (uploadedUrls.length > 0) {\r\n      setForm(prevForm => ({ \r\n        ...prevForm, \r\n        imageUrls: [...prevForm.imageUrls, ...uploadedUrls] \r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleRemoveImage = (indexToRemove) => {\r\n    setForm(prevForm => ({\r\n      ...prevForm,\r\n      imageUrls: prevForm.imageUrls.filter((_, index) => index !== indexToRemove)\r\n    }));\r\n  };\r\n\r\n  const handleAddProduct = async (e) => {\r\n    e.preventDefault();\r\n    if (!form.name || !form.description || !form.price || !form.stock) {\r\n      alert('Name, description, price, and stock are required');\r\n      return;\r\n    }\r\n    try {\r\n      // Use the first image as the main/default image, and all images in the images array\r\n      const mainImageUrl = form.imageUrls && form.imageUrls.length > 0 ? form.imageUrls[0] : '';\r\n      \r\n      await axios.post('http://localhost:5000/api/products', {\r\n        id: productId,\r\n        name: form.name,\r\n        description: form.description,\r\n        price: parseFloat(form.price),\r\n        previousPrice: form.previousPrice ? parseFloat(form.previousPrice) : null,\r\n        stock: parseInt(form.stock, 10),\r\n        maxBuyers: form.maxBuyers ? parseInt(form.maxBuyers, 10) : null,\r\n        maxPerPerson: form.maxPerPerson ? parseInt(form.maxPerPerson, 10) : null,\r\n        tier: form.tier,\r\n        status: form.status,\r\n        imageUrl: mainImageUrl, // First image as main/default\r\n        images: form.imageUrls, // All images in array\r\n        videos: form.videos,\r\n        tags: form.tags,\r\n        categories: form.categories\r\n      });\r\n      setForm({\r\n        name: '',\r\n        description: '',\r\n        price: '',\r\n        previousPrice: '',\r\n        stock: '',\r\n        maxBuyers: '',\r\n        maxPerPerson: '',\r\n        tier: 'Cheap',\r\n        status: 'Active',\r\n        imageUrls: [],\r\n        tags: [],\r\n        categories: []\r\n      });\r\n      setProductId('');\r\n      setStockInput('');\r\n      setStatusInput('Active');\r\n      fetchProducts();\r\n    } catch (error) {\r\n      console.error('Error adding product:', error);\r\n      if (error.response) {\r\n        console.error('Response data:', error.response.data);\r\n        console.error('Response status:', error.response.status);\r\n        console.error('Response headers:', error.response.headers);\r\n      }\r\n      alert('Failed to add product. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleDeleteProduct = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/products/${id}`);\r\n      fetchProducts();\r\n    } catch (error) {\r\n      console.error('Error deleting product:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteUser = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/users/${id}`);\r\n      fetchUsers();\r\n    } catch (error) {\r\n      console.error('Error deleting user:', error);\r\n    }\r\n  };\r\n\r\n  const handleShowProductDetails = (product) => {\r\n    setSelectedProduct(product);\r\n    setShowProductDetailsModal(true);\r\n  };\r\n\r\n  const handleCloseProductDetails = () => {\r\n    setSelectedProduct(null);\r\n    setShowProductDetailsModal(false);\r\n  };\r\n\r\n  const handleProductUpdate = () => {\r\n    fetchProducts(); // Refresh the product list after update\r\n  };\r\n\r\n  const handleSectionChange = (section) => {\r\n    setActiveSection(section);\r\n    const element = document.getElementById(section);\r\n    if (element) {\r\n      element.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  };\r\n\r\n  const handleLoginInputChange = (e) => {\r\n    setLoginForm({\r\n      ...loginForm,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleLoginSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { username, password } = loginForm;\r\n    if (username === 'Anime-spring' && password === 'gHost-oF-the-maRket') {\r\n      setIsAuthenticated(true);\r\n      setLoginError('');\r\n    } else {\r\n      setLoginError('Invalid username or password');\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setIsAuthenticated(false);\r\n    localStorage.removeItem('adminIsAuthenticated');\r\n    setLoginForm({ username: '', password: '' });\r\n  };\r\n\r\n  if (!isAuthenticated) {\r\n    return (\r\n      <div className=\"admin-login-container\">\r\n        <h2>Admin Panel Login</h2>\r\n        <form onSubmit={handleLoginSubmit} className=\"admin-login-form\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            placeholder=\"Username\"\r\n            value={loginForm.username}\r\n            onChange={handleLoginInputChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            value={loginForm.password}\r\n            onChange={handleLoginInputChange}\r\n            required\r\n          />\r\n          {loginError && <p className=\"login-error\">{loginError}</p>}\r\n          <button type=\"submit\">Login</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"admin-panel-container admin-panel-layout\">\r\n      <AdminNavBar activeSection={activeSection} onSectionChange={handleSectionChange} onLogout={handleLogout} />\r\n      <main className=\"main-content\">\r\n        {activeSection === 'dashboard' && (\r\n          <Dashboard products={products} />\r\n        )}\r\n        {activeSection === 'products' && (\r\n          <>\r\n            <h1 id=\"products\">Products</h1>\r\n            <div className=\"product-list-header\">\r\n              <h2>Products list</h2>\r\n              <div className=\"product-list-actions\">\r\n                <button className=\"btn-filter\"><IconFilter /> Filter</button>\r\n                <button className=\"btn-see-all\"><IconSeeAll /> See All</button>\r\n                <button className=\"btn-add\" onClick={() => setShowAddProductForm(!showAddProductForm)}><IconAdd /> Add Product</button>\r\n              </div>\r\n            </div>\r\n            <div className=\"search-container\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search by product ID or name...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"search-input\"\r\n              />\r\n            </div>\r\n            {showAddProductForm && (\r\n              <form onSubmit={handleAddProduct} className=\"admin-form\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  placeholder=\"Product Name\"\r\n                  value={form.name}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"productId\"\r\n                  placeholder=\"Product ID\"\r\n                  value={productId || ''}\r\n                  disabled\r\n                  readOnly\r\n                  style={{ backgroundColor: '#e0e0e0', cursor: 'not-allowed' }}\r\n                />\r\n                <button type=\"button\" onClick={handleRegenerateId} style={{ marginBottom: '10px' }}>\r\n                  <IconUpdate /> Regenerate ID\r\n                </button>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"description\"\r\n                  placeholder=\"Description\"\r\n                  value={form.description}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                />\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"previousPrice\"\r\n                  placeholder=\"Previous Price\"\r\n                  value={form.previousPrice}\r\n                  onChange={handleInputChange}\r\n                  step=\"0.01\"\r\n                />\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"price\"\r\n                  placeholder=\"Price\"\r\n                  value={form.price}\r\n                  onChange={handleInputChange}\r\n                  step=\"0.01\"\r\n                  required\r\n                />\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"maxBuyers\"\r\n                  placeholder=\"Max Buyers (e.g. 10)\"\r\n                  value={form.maxBuyers}\r\n                  onChange={handleInputChange}\r\n                />\r\n                <div style={{ marginBottom: '10px', fontSize: '14px', color: '#666' }}>\r\n                  {form.stock ? `Only ${form.stock} left in stock` : 'Out of stock'}\r\n                </div>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"maxPerPerson\"\r\n                  placeholder=\"Max Per Person (e.g. 10)\"\r\n                  value={form.maxPerPerson}\r\n                  onChange={handleInputChange}\r\n                />\r\n                <div style={{ marginBottom: '10px', fontSize: '14px', color: '#666' }}>\r\n                  Max Per Person: {form.maxPerPerson ? form.maxPerPerson : 'Unlimited'}\r\n                </div>\r\n                <select\r\n                  name=\"tier\"\r\n                  value={form.tier}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                >\r\n                  <option value=\"Cheap\">Cheap</option>\r\n                  <option value=\"Medium\">Medium</option>\r\n                  <option value=\"Premium\">Premium</option>\r\n                </select>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"stock\"\r\n                  placeholder=\"Stock\"\r\n                  value={stockInput}\r\n                  onChange={handleStockChange}\r\n                  required\r\n                />\r\n                <select\r\n                  name=\"status\"\r\n                  value={statusInput}\r\n                  onChange={handleStatusChange}\r\n                  required\r\n                >\r\n                  {statusOptions.map((status) => (\r\n                    <option key={status} value={status}>{status}</option>\r\n                  ))}\r\n                </select>\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"imageFiles\"\r\n                  accept=\"image/*\"\r\n                  multiple\r\n                  onChange={handleImageChange}\r\n                />\r\n                <div className=\"image-previews\">\r\n                {form.imageUrls && form.imageUrls.map((url, index) => (\r\n                  <div key={index} className=\"image-preview-item\">\r\n                    <img src={url} alt={`Preview ${index + 1}`} className=\"image-preview\" />\r\n                    <button \r\n                      type=\"button\" \r\n                      className=\"remove-image-button\" \r\n                      onClick={() => handleRemoveImage(index)}\r\n                    >\r\n                      ×\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n                </div>\r\n                <div className=\"category-input-container\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter category\"\r\n                    value={categoryInput}\r\n                    onChange={handleCategoryInputChange}\r\n                    onFocus={() => setShowCategorySuggestions(categoryInput.length > 0)}\r\n                    onBlur={() => setTimeout(() => setShowCategorySuggestions(false), 200)}\r\n                    onKeyDown={(e) => {\r\n                      if (e.key === 'Enter') {\r\n                        e.preventDefault();\r\n                        handleAddCategory(categoryInput);\r\n                      }\r\n                    }}\r\n                  />\r\n                  <button type=\"button\" onClick={() => handleAddCategory(categoryInput)}><IconAdd /> Add Category</button>\r\n                  {showCategorySuggestions && categorySuggestions.length > 0 && (\r\n                    <div className=\"category-suggestions\">\r\n                      {categorySuggestions.map((cat, idx) => (\r\n                        <div\r\n                          key={idx}\r\n                          className=\"suggestion-item\"\r\n                          onClick={() => handleCategorySuggestionClick(cat)}\r\n                        >\r\n                          {cat}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"categories-list\">\r\n                  {form.categories && form.categories.map((cat, index) => (\r\n                    <span key={index} className=\"category-item\">\r\n                      {cat}\r\n                      <button type=\"button\" className=\"remove-category-button\" onClick={() => handleRemoveCategory(cat)}>x</button>\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n                <div className=\"tags-input-container\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"tagInput\"\r\n                    placeholder=\"Enter tag\"\r\n                    value={tagInput}\r\n                    onChange={handleTagInputChange}\r\n                    onKeyDown={(e) => {\r\n                      if (e.key === 'Enter') {\r\n                        e.preventDefault();\r\n                        handleAddTag();\r\n                      }\r\n                    }}\r\n                  />\r\n                  <button type=\"button\" onClick={handleAddTag}><IconAdd /> Add Tag</button>\r\n                </div>\r\n                <div className=\"tags-list\">\r\n                  {form.tags && form.tags.map((tag, index) => (\r\n                    <span key={index} className=\"tag-item\">\r\n                      {tag}\r\n                      <button type=\"button\" className=\"remove-tag-button\" onClick={() => handleRemoveTag(tag)}>x</button>\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n                <div className=\"video-input-container\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter video URL\"\r\n                    value={videoInput}\r\n                    onChange={(e) => setVideoInput(e.target.value)}\r\n                    onKeyDown={(e) => {\r\n                      if (e.key === 'Enter') {\r\n                        e.preventDefault();\r\n                        handleAddVideo();\r\n                      }\r\n                    }}\r\n                  />\r\n                  <button type=\"button\" onClick={handleAddVideo}><IconAdd /> Add Video</button>\r\n                </div>\r\n                <div className=\"videos-list\">\r\n                  {form.videos && form.videos.map((video, index) => (\r\n                    <div key={index} className=\"video-item\">\r\n                      <span>{video}</span>\r\n                      <button type=\"button\" className=\"remove-video-button\" onClick={() => handleRemoveVideo(video)}>x</button>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <button type=\"submit\"><IconAdd /> Add Product</button>\r\n              </form>\r\n            )}\r\n            <table className=\"product-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th><input type=\"checkbox\" /></th>\r\n                  <th>Product Name</th>\r\n                  <th>Product ID</th>\r\n                  <th>Category</th>\r\n                  <th>Price</th>\r\n                  <th>Stock</th>\r\n                  <th>Status</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filteredProducts && filteredProducts.map(product => (\r\n                  <tr key={product.id} className=\"product-table-row\">\r\n                    <td><input type=\"checkbox\" /></td>\r\n                    <td className=\"product-name-cell\">\r\n                      {console.log('Product imageUrl:', product.imageUrl)}\r\n                      <img src={product.imageUrl && product.imageUrl.startsWith('http') ? product.imageUrl : `${window.location.origin}/uploads/${product.imageUrl}`} alt={product.name} className=\"product-table-image\" />\r\n                      <span>{product.name}</span>\r\n                      {product.previousPrice && product.previousPrice > product.price && ((product.previousPrice - product.price) / product.previousPrice) <= 0.05 && (\r\n                        <span className=\"elite-choice-badge\">Elite Choice</span>\r\n                      )}\r\n                    </td>\r\n                    <td>{product.id}</td>\r\n            <td>{(product.categories && product.categories.length > 0) ? product.categories.join(', ') : 'No Category'}</td>\r\n            <td>\r\n              ${product.price ? product.price.toFixed(2) : '0.00'}\r\n              {product.previousPrice && product.previousPrice > product.price && (\r\n                <span className=\"discount-display\">\r\n                  {((product.previousPrice - product.price) / product.previousPrice) <= 0.05 ? 'Elite Choice' : `${Math.round(((product.previousPrice - product.price) / product.previousPrice) * 100)}% OFF`}\r\n                </span>\r\n              )}\r\n            </td>\r\n            <td>{product.stock || 0}</td>\r\n            <td>\r\n              <span className={`status-badge status-${(product.status || '').toLowerCase()}`}>\r\n                {product.status || 'Unknown'}\r\n              </span>\r\n            </td>\r\n            <td>\r\n              {product.previousPrice && product.previousPrice > product.price && ((product.previousPrice - product.price) / product.previousPrice) <= 0.05 && (\r\n                <span className=\"elite-choice-badge\">Elite Choice</span>\r\n              )}\r\n              <button className=\"btn-details\" onClick={() => handleShowProductDetails(product)}>Details</button>\r\n              <button className=\"btn-delete\" onClick={() => handleDeleteProduct(product.id)}>Delete</button>\r\n            </td>\r\n          </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </>\r\n        )}\r\n        {activeSection === 'users' && (\r\n          <>\r\n            <h1 id=\"users\">User Data</h1>\r\n            <table className=\"user-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Username</th>\r\n                  <th>Email</th>\r\n                  <th>Password</th>\r\n                  <th>Number</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {users && users.map(user => (\r\n                  <tr key={user.id} className=\"user-table-row\">\r\n                    <td>{user.username || 'N/A'}</td>\r\n                    <td>{user.email || 'N/A'}</td>\r\n                    <td>{user.password || 'N/A'}</td>\r\n                    <td>{user.phone || 'N/A'}</td>\r\n                    <td>\r\n                      <button className=\"btn-delete\" onClick={() => handleDeleteUser(user.id)}>Delete</button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </>\r\n        )}\r\n        {activeSection === 'messages' && (\r\n          <AdminMessages />\r\n        )}\r\n        {activeSection === 'orders' && (\r\n          <>\r\n            {console.log('AdminPanel - Passing to Orders:', { processingOrders, users })}\r\n            <Orders orders={processingOrders} products={products} users={users} onOrderStatusChange={fetchOrders} />\r\n          </>\r\n        )}\r\n        {activeSection === 'cancelorder' && (\r\n          <CancelOrders orders={canceledOrders} products={products} users={users} />\r\n        )}\r\n        {activeSection === 'confirmedOrders' && (\r\n          <AdminConfirmedOrders products={products} users={users} />\r\n        )}\r\n      {activeSection === 'orderhistory' && (\r\n          <OrderHistory isAdmin={true} />\r\n        )}\r\n      {activeSection === 'deliveredorders' && (\r\n          <DeliveredOrders products={products} orders={deliveredOrders} refreshOrders={fetchOrders} />\r\n        )}\r\n      {activeSection === 'shippedOrders' && (\r\n          <AdminShippedOrders products={products} onOrderStatusChange={fetchOrders} />\r\n        )}\r\n      {activeSection === 'update' && (\r\n          <BannerManagement />\r\n        )}\r\n      </main>\r\n      \r\n      {showProductDetailsModal && selectedProduct && (\r\n        <ProductDetailsModal\r\n          product={selectedProduct}\r\n          onClose={handleCloseProductDetails}\r\n          onUpdate={handleProductUpdate}\r\n        />\r\n      )}\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n"],"names":["_ref","activeSection","onSectionChange","onLogout","onOrderFilterChange","selectedFilter","setSelectedFilter","useState","_jsxs","className","children","_jsx","style","display","flexDirection","label","value","map","filter","index","onClick","order","AdminMessages","messages","setMessages","users","setUsers","loadingMessages","setLoadingMessages","selectedUserId","setSelectedUserId","newMessage","setNewMessage","adminId","useEffect","fetchUsers","console","log","eventSource","EventSource","onopen","onmessage","event","data","JSON","parse","Array","isArray","length","prevMessages","find","msg","id","error","onerror","err","close","timeout","setTimeout","clearTimeout","async","res","axios","get","getUsername","userId","user","u","username","lastMessagesMap","forEach","senderId","receiverId","filteredMessages","lastMsg","concat","handleUserSelect","charAt","toUpperCase","content","Date","timestamp","toLocaleString","placeholder","onChange","e","target","disabled","trim","post","fetchMessages","orders","products","onDeleteOrder","isProfileOrders","searchTerm","setSearchTerm","searchField","setSearchField","statusFilter","setStatusFilter","getProductById","product","filteredOrders","lowerSearch","toLowerCase","status","includes","toString","productIds","some","pid","shippingAddress","phoneNumber","uniqueOrdersMap","Map","has","set","from","values","orderStatuses","setOrderStatuses","reduce","acc","updateOrderStatus","orderId","newStatus","response","fetch","method","headers","body","stringify","ok","errorText","text","Error","prev","_objectSpread","onOrderStatusChange","alert","marginBottom","padding","backgroundColor","borderRadius","type","marginLeft","productDetails","productDetail","src","imageUrl","alt","name","price","toFixed","quantity","fullName","building","colony","region","city","area","address","_order$shippingAddres","uid","Boolean","String","startsWith","substring","email","phone","getUserById","_Fragment","userUsername","userEmail","userPhoneUser","userPhoneShipping","sum","item","_getProductById","_getProductById2","paymentMethod","modal","document","createElement","position","top","left","width","height","justifyContent","alignItems","zIndex","popup","boxShadow","textAlign","minWidth","fontFamily","message","textContent","fontSize","color","btnConfirm","margin","border","fontWeight","cursor","onmouseover","onmouseout","onclick","removeChild","btnCancel","appendChild","handleConfirm","handleCancel","readOnly","isAdmin","setOrders","setProducts","loading","setLoading","auth","getAuth","setUser","unsubscribe","onAuthStateChanged","currentUser","fetchUserOrders","fetchProducts","filterStatus","url","json","historyStatuses","htmlFor","prevOrders","sort","a","b","orderDate","slice","handleCancelOrder","p","_products$find","_products$find2","refreshOrders","showShipModal","setShowShipModal","selectedOrderId","setSelectedOrderId","fetchConfirmedOrders","confirmedOrders","closeShipModal","window","confirm","openShipModal","confirmShip","showDeliveredModal","setShowDeliveredModal","showCancelModal","setShowCancelModal","modalType","setModalType","fetchShippedOrders","shippedOrders","openModal","closeModal","confirmAction","active","payload","coordinate","tooltipStyle","x","y","pointerEvents","entry","COLORS","timeRanges","totalSales","setTotalSales","previousTotalSales","setPreviousTotalSales","totalDeliveredSales","setTotalDeliveredSales","previousTotalDeliveredSales","setPreviousTotalDeliveredSales","previousProductCount","setPreviousProductCount","productChangePercentage","setProductChangePercentage","totalSalesChange","setTotalSalesChange","totalOrders","setTotalOrders","previousTotalOrders","setPreviousTotalOrders","totalOrdersChange","setTotalOrdersChange","totalVisitors","setTotalVisitors","previousTotalVisitors","setPreviousTotalVisitors","totalVisitorsChange","setTotalVisitorsChange","totalDeliveredSalesChange","setTotalDeliveredSalesChange","fullRevenueData","setFullRevenueData","revenueData","setRevenueData","selectedRange","setSelectedRange","filteredData","monthlyTarget","setMonthlyTarget","percent","change","revenue","activeUsers","setActiveUsers","activeUsersChange","setActiveUsersChange","activeUsersByCountry","setActiveUsersByCountry","conversionRateData","setConversionRateData","topCategories","setTopCategories","trafficData","setTrafficData","currentProductCount","calculatePercentageChange","current","previous","undefined","monthlyProgress","filteredRevenueData","days","parseInt","range","ResponsiveContainer","LineChart","x1","y1","x2","y2","offset","stopColor","stopOpacity","dx","dy","stdDeviation","floodColor","floodOpacity","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","CustomTooltip","Legend","Line","stroke","strokeWidth","dot","r","fill","activeDot","animationDuration","animationEasing","country","PieChart","Pie","nameKey","cx","cy","outerRadius","Cell","cat","BarChart","Bar","source","onClose","onSave","initialData","title","setTitle","description","setDescription","imageFile","setImageFile","setImageUrl","buttonText","setButtonText","tags","setTags","tagInput","setTagInput","onSubmit","preventDefault","uploadFormData","FormData","append","uploadResponse","uploadResult","bannerData","required","accept","files","objectFit","handleAddTag","newTag","tag","handleRemoveTag","tagToRemove","BannerManagement","banners","setBanners","showAddForm","setShowAddForm","editingBanner","setEditingBanner","setError","fetchBanners","BannerForm","patch","banner","_banner$tags","onError","handleEditClick","delete","handleDeleteBanner","onUpdate","form","setForm","previousPrice","stock","maxBuyers","maxPerPerson","tier","images","videos","categories","categoryInput","setCategoryInput","videoInput","setVideoInput","categoriesOptions","handleInputChange","prevForm","handleAddVideo","newVideo","stopPropagation","put","parseFloat","rows","step","marginTop","file","formData","multiple","uploadedImages","push","image","handleRemoveImage","indexToRemove","_","onKeyDown","key","video","handleRemoveVideo","videoToRemove","list","idx","category","handleRemoveCategory","categoryToRemove","IconUpdate","IconAdd","IconFilter","IconSeeAll","AdminPanel","setActiveSection","imageUrls","productId","setProductId","showAddProductForm","setShowAddProductForm","selectedProduct","setSelectedProduct","showProductDetailsModal","setShowProductDetailsModal","filteredProducts","setFilteredProducts","filtered","categorySuggestions","setCategorySuggestions","showCategorySuggestions","setShowCategorySuggestions","generateUniqueProductId","newId","existingIds","Set","Math","floor","random","handleAddCategory","stockInput","setStockInput","statusInput","setStatusInput","isAuthenticated","setIsAuthenticated","localStorage","getItem","loginForm","setLoginForm","password","loginError","setLoginError","setItem","fetchOrders","removeItem","processingOrders","setProcessingOrders","setConfirmedOrders","canceledOrders","setCanceledOrders","orderHistory","setOrderHistory","setShippedOrders","deliveredOrders","setDeliveredOrders","processing","confirmed","canceled","history","shipped","delivered","handleLoginInputChange","handleLoginSubmit","AdminNavBar","section","element","getElementById","scrollIntoView","behavior","handleLogout","Dashboard","mainImageUrl","handleRegenerateId","uploadedUrls","onFocus","onBlur","location","origin","join","round","handleShowProductDetails","handleDeleteProduct","handleDeleteUser","Orders","CancelOrders","AdminConfirmedOrders","OrderHistory","DeliveredOrders","AdminShippedOrders","ProductDetailsModal","handleCloseProductDetails","handleProductUpdate"],"sourceRoot":""}