{"version":3,"file":"static/js/813.c8f09cc8.chunk.js","mappings":"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","sources":["components/Cart.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getAuth } from 'firebase/auth';\r\nimport './Cart.css';\r\nimport { CartContext } from '../contexts/CartContext';\r\nimport axios from 'axios';\r\n\r\nconst Cart = () => {\r\n  const navigate = useNavigate();\r\n  const { cartItems, removeFromCart, updateQuantity } = useContext(CartContext);\r\n  const [productsMap, setProductsMap] = useState({});\r\n  const [userId, setUserId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:5000/api/products');\r\n        const productsArray = res.data;\r\n        const map = {};\r\n        productsArray.forEach(product => {\r\n          map[product.id] = product;\r\n        });\r\n        setProductsMap(map);\r\n      } catch (error) {\r\n        console.error('Error fetching products:', error);\r\n      }\r\n    };\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const auth = getAuth();\r\n    const user = auth.currentUser;\r\n    if (user) {\r\n      setUserId(user.uid);\r\n    }\r\n  }, []);\r\n\r\n  const handleProceedToCheckout = () => {\r\n    const productIds = cartItems.map(item => item.id).join(',');\r\n    const checkoutUrl = `/checkout?userId=${userId || ''}&productIds=${productIds}`;\r\n    navigate(checkoutUrl, { state: { fromCart: true } });\r\n  };\r\n\r\n  const getImageUrl = (imageUrl) => {\r\n    if (!imageUrl) return '';\r\n    return imageUrl.startsWith('http') ? imageUrl : `http://localhost:5000/${imageUrl}`;\r\n  };\r\n\r\n  const calculateTotal = () => {\r\n    return cartItems.reduce((total, item) => {\r\n      const price = item.price || 0;\r\n      const quantity = item.quantity || 1;\r\n      return total + (price * quantity);\r\n    }, 0);\r\n  };\r\n\r\n  const handleQuantityChange = (product, newQuantity) => {\r\n    const fullProduct = productsMap[product.id] || {};\r\n    const maxStock = fullProduct.stock || Infinity;\r\n\r\n    if (newQuantity > maxStock) {\r\n      alert(`Cannot add more than ${maxStock} items. Only ${maxStock} left in stock.`);\r\n      return;\r\n    }\r\n\r\n    if (newQuantity <= 0) {\r\n      const confirmRemove = window.confirm(`Remove ${product.name} from cart?`);\r\n      if (!confirmRemove) return;\r\n    }\r\n\r\n    updateQuantity(product.id, newQuantity);\r\n  };\r\n\r\n  return (\r\n    <div className=\"cart-container\">\r\n      <h2>Your Cart</h2>\r\n      {cartItems.length === 0 ? (\r\n        <p>Your cart is empty.</p>\r\n      ) : (\r\n        <div className=\"cart-cards-container\">\r\n          {cartItems.map((product) => {\r\n            const fullProduct = productsMap[product.id] || {};\r\n            const imageUrl = fullProduct.imageUrl || product.imageUrl || '';\r\n            return (\r\n              <div key={product.id} className=\"cart-card\">\r\n                <div className=\"cart-image-container\">\r\n                  <img src={getImageUrl(imageUrl)} alt={product.name} className=\"cart-image\" />\r\n                </div>\r\n                <div className=\"cart-details\">\r\n                  <h3 className=\"cart-product-name\">{product.name}</h3>\r\n                  <p className=\"cart-product-id\">ID: {product.id}</p>\r\n                  <p className=\"cart-product-price\">${product.price !== undefined && product.price !== null ? product.price.toFixed(2) : 'N/A'}</p>\r\n                  <div className=\"cart-quantity-controls\">\r\n                    <button className=\"quantity-btn\" onClick={() => handleQuantityChange(product, product.quantity - 1)}>-</button>\r\n                    <span className=\"quantity-display\">{product.quantity}</span>\r\n                    <button className=\"quantity-btn\" onClick={() => handleQuantityChange(product, product.quantity + 1)}>+</button>\r\n                  </div>\r\n                  <button className=\"cart-item-delete\" onClick={() => removeFromCart(product.id)}>Delete</button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n      {cartItems.length > 0 && (\r\n        <div className=\"cart-total\">\r\n          <h3>Total: ${calculateTotal().toFixed(2)}</h3>\r\n        </div>\r\n      )}\r\n      <button className=\"proceed-checkout-button\" onClick={handleProceedToCheckout} disabled={cartItems.length === 0}>\r\n        Proceed to Checkout\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"],"names":["Cart","navigate","useNavigate","cartItems","removeFromCart","updateQuantity","useContext","CartContext","productsMap","setProductsMap","useState","userId","setUserId","useEffect","async","productsArray","axios","get","data","map","forEach","product","id","error","console","fetchProducts","user","getAuth","currentUser","uid","getImageUrl","imageUrl","startsWith","concat","handleQuantityChange","newQuantity","maxStock","stock","Infinity","alert","window","confirm","name","_jsxs","className","children","_jsx","length","src","alt","undefined","price","toFixed","onClick","quantity","reduce","total","item","handleProceedToCheckout","productIds","join","checkoutUrl","state","fromCart","disabled"],"sourceRoot":""}