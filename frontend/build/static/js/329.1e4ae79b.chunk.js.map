{"version":3,"file":"static/js/329.1e4ae79b.chunk.js","mappings":"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","sources":["components/BannerHero.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './BannerHero.css';\r\n\r\nconst BannerHero = ({ bannerImages, bannerText }) => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [transitionDirection, setTransitionDirection] = useState('right');\r\n\r\n  useEffect(() => {\r\n    if (!bannerImages || bannerImages.length === 0) {\r\n      return;\r\n    }\r\n    const interval = setInterval(() => {\r\n      setTransitionDirection('right');\r\n      setCurrentIndex(prevIndex => (prevIndex + 1) % bannerImages.length);\r\n    }, 5000); // Change slide every 5 seconds\r\n    return () => clearInterval(interval);\r\n  }, [bannerImages]);\r\n\r\n  if (!bannerImages || bannerImages.length === 0) {\r\n    return <div className=\"banner-hero-placeholder\">No banner images available</div>;\r\n  }\r\n\r\n  // Ensure image URL is absolute or prepend host if relative\r\n  const getImageUrl = (url) => {\r\n    if (!url) return '';\r\n    if (url.startsWith('http://') || url.startsWith('https://')) {\r\n      return url;\r\n    }\r\n    // Prepend host for relative URLs\r\n    return `${window.location.origin}${url.startsWith('/') ? '' : '/'}${url}`;\r\n  };\r\n\r\n  return (\r\n    <section\r\n      className=\"banner-hero\"\r\n      onMouseEnter={e => e.currentTarget.style.transform = 'scale(1.05)'}\r\n      onMouseLeave={e => e.currentTarget.style.transform = 'scale(1)'}\r\n    >\r\n      {/* Decorative corner elements */}\r\n      <div className=\"corner-decoration corner-top-left\"></div>\r\n      <div className=\"corner-decoration corner-top-right\"></div>\r\n      <div className=\"corner-decoration corner-bottom-left\"></div>\r\n      <div className=\"corner-decoration corner-bottom-right\"></div>\r\n      \r\n      {/* Decorative lines */}\r\n      <div className=\"decorative-line decorative-line-top\"></div>\r\n      <div className=\"decorative-line decorative-line-bottom\"></div>\r\n      <div className=\"decorative-line decorative-line-left\"></div>\r\n      <div className=\"decorative-line decorative-line-right\"></div>\r\n      \r\n      <div className=\"banner-slider-container\">\r\n        {bannerImages.map((banner, index) => (\r\n          <div\r\n            key={banner.id || index}\r\n            className={`banner-slide ${index === currentIndex ? 'active' : ''} ${transitionDirection}`}\r\n          >\r\n            <img\r\n              src={getImageUrl(banner.imageUrl)}\r\n              alt={`Banner ${index + 1}`}\r\n              style={{ width: '100%', height: '100%', borderRadius: '25px', objectFit: 'cover' }}\r\n              onError={(e) => {\r\n                e.target.onerror = null;\r\n                e.target.src = '/images/banner/default.jpg'; // fallback image\r\n              }}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"banner-text-overlay\">\r\n        <h1>{bannerImages[currentIndex]?.title}</h1>\r\n        <p>{bannerImages[currentIndex]?.description}</p>\r\n        {bannerImages[currentIndex]?.buttonText && (\r\n          <button\r\n            onClick={() => {\r\n              const tags = bannerImages[currentIndex]?.tags || [];\r\n              const query = tags.join(',');\r\n              window.location.href = `/search?tags=${encodeURIComponent(query)}`;\r\n            }}\r\n          >\r\n            {bannerImages[currentIndex].buttonText}\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className=\"banner-navigation\">\r\n        {bannerImages.map((_, index) => {\r\n          let dotClass = 'banner-dot';\r\n          \r\n          // Calculate the distance from current index\r\n          const distance = Math.abs(index - currentIndex);\r\n          \r\n          if (index === currentIndex) {\r\n            dotClass += ' active'; // Large dot for active\r\n          } else if (distance === 1 || distance === 2) {\r\n            dotClass += ' medium'; // Medium dots for the next two\r\n          } else if (distance === 3 || distance === 4) {\r\n            dotClass += ' small'; // Small dots for the next two\r\n          } else {\r\n            dotClass += ' hidden'; // Hide any dots beyond the first five\r\n          }\r\n\r\n          return (\r\n            <div\r\n              key={index}\r\n              className={dotClass}\r\n              onClick={() => {\r\n                setTransitionDirection(index > currentIndex ? 'right' : 'left');\r\n                setCurrentIndex(index);\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default BannerHero;\r\n"],"names":["_ref","_bannerImages$current","_bannerImages$current2","_bannerImages$current3","bannerImages","bannerText","currentIndex","setCurrentIndex","useState","transitionDirection","setTransitionDirection","useEffect","length","interval","setInterval","prevIndex","clearInterval","_jsx","className","children","_jsxs","onMouseEnter","e","currentTarget","style","transform","onMouseLeave","map","banner","index","concat","src","url","imageUrl","startsWith","window","location","origin","alt","width","height","borderRadius","objectFit","onError","target","onerror","id","title","description","buttonText","onClick","_bannerImages$current4","query","tags","join","href","encodeURIComponent","_","dotClass","distance","Math","abs"],"sourceRoot":""}