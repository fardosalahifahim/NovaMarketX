{"version":3,"file":"static/js/403.e5affdac.chunk.js","mappings":"kLAOA,MA6FA,EA7FsBA,KACpB,MAAMC,EAJC,IAAIC,iBAAgBC,EAAAA,EAAAA,MAAcC,QAKnCC,EAAaJ,EAAMK,IAAI,MAAQ,GAC/BC,EAAYN,EAAMK,IAAI,SAAW,IAChCE,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAkBC,IAAuBF,EAAAA,EAAAA,UAAS,IA4DzD,OA1DAG,EAAAA,EAAAA,WAAU,KACcC,WACpB,IACE,MAAMC,QAAYC,MAAM,sCAClBC,QAAaF,EAAIG,OACvBT,EAAYQ,EACd,CAAE,MAAOE,GACPC,QAAQD,MAAM,2BAA4BA,EAC5C,GAEFE,IACC,KAEDR,EAAAA,EAAAA,WAAU,KACV,IAAIS,EAAWd,EAGf,GAAID,EAAW,CACb,MAAMgB,EAAUhB,EAAUiB,MAAM,KAAKC,IAAIC,GAAOA,EAAIC,OAAOC,eAC3DN,EAAWd,EAASqB,OAAOC,GACzBA,EAAQC,MAAQD,EAAQC,KAAKC,KAAKN,GAChCH,EAAQS,KAAKC,GAAaP,EAAIE,cAAcM,SAASD,KAG3D,MAEK,GAAI5B,EAAY,CACnB,MAAM8B,EAAY9B,EAAWuB,cAsB7BN,EAnBuBd,EAASiB,IAAIK,IAClC,IAAIM,EAAQ,EAGMN,EAAQO,KAAKT,cAAcM,SAASC,KACvCC,GAAS,GAGPN,EAAQC,MAAQD,EAAQC,KAAKC,KAAKN,GAAOA,EAAIE,cAAcM,SAASC,MACvEC,GAAS,GAMvB,OAHkBN,EAAQQ,aAAeR,EAAQQ,YAAYV,cAAcM,SAASC,KACrEC,GAAS,GAEjB,CAAEN,UAASM,WAKjBP,OAAOU,GAAQA,EAAKH,MAAQ,GAC5BI,KAAK,CAACC,EAAGC,IAAMA,EAAEN,MAAQK,EAAEL,OAC3BX,IAAIc,GAAQA,EAAKT,QACtB,CAEAlB,EAAoBU,IACnB,CAACd,EAAUH,EAAYE,KAGxBoC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,CACpCxC,GACCsC,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,uBAAqBxC,EAAW,OAClCE,GACFoC,EAAAA,EAAAA,MAAA,MAAIG,MAAO,CAAEC,QAAS,QAASF,SAAA,CAAC,oCAAkCtC,EAAU,QAE5EyC,EAAAA,EAAAA,KAAA,MAAAH,SAAI,iBAEuB,IAA5BlC,EAAiBsC,QAChBD,EAAAA,EAAAA,KAAA,KAAAH,SAAG,wBAEHG,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,oBAAmBC,SAC9BlC,EAAiBc,IAAIK,IACpBkB,EAAAA,EAAAA,KAAA,MAAqBJ,UAAU,eAAcC,UAC3CF,EAAAA,EAAAA,MAACO,EAAAA,GAAI,CAACC,GAAE,YAAAC,OAAcC,mBAAmBvB,EAAQO,MAAK,QAAAe,OAAOtB,EAAQwB,IAAKT,SAAA,EACxEG,EAAAA,EAAAA,KAAA,OAAKO,IAAKzB,EAAQ0B,SAAUC,IAAK3B,EAAQO,KAAMO,UAAU,mBACzDI,EAAAA,EAAAA,KAAA,MAAAH,SAAKf,EAAQO,QACbM,EAAAA,EAAAA,MAAA,KAAGC,UAAU,QAAOC,SAAA,CAAC,IAAEf,EAAQ4B,MAAMC,QAAQ,UAJxC7B,EAAQwB,U","sources":["components/SearchResults.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nconst SearchResults = () => {\r\n  const query = useQuery();\r\n  const searchTerm = query.get('q') || '';\r\n  const tagsParam = query.get('tags') || '';\r\n  const [products, setProducts] = useState([]);\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const res = await fetch('http://localhost:5000/api/products');\r\n        const data = await res.json();\r\n        setProducts(data);\r\n      } catch (error) {\r\n        console.error('Error fetching products:', error);\r\n      }\r\n    };\r\n    fetchProducts();\r\n  }, []);\r\n\r\n    useEffect(() => {\r\n    let filtered = products;\r\n    \r\n    // If tags parameter is provided, search by tags\r\n    if (tagsParam) {\r\n      const tagList = tagsParam.split(',').map(tag => tag.trim().toLowerCase());\r\n      filtered = products.filter(product => \r\n        product.tags && product.tags.some(tag => \r\n          tagList.some(searchTag => tag.toLowerCase().includes(searchTag))\r\n        )\r\n      );\r\n    } \r\n    // If search term is provided, search by name, tags, or description with priority\r\n    else if (searchTerm) {\r\n      const lowerTerm = searchTerm.toLowerCase();\r\n      \r\n      // Create a scored array with priority: name > tags > description\r\n      const scoredProducts = products.map(product => {\r\n        let score = 0;\r\n        \r\n        // Name match - highest priority (score 3)\r\n        const nameMatch = product.name.toLowerCase().includes(lowerTerm);\r\n        if (nameMatch) score += 3;\r\n        \r\n        // Tag match - medium priority (score 2)\r\n        const tagMatch = product.tags && product.tags.some(tag => tag.toLowerCase().includes(lowerTerm));\r\n        if (tagMatch) score += 2;\r\n        \r\n        // Description match - lowest priority (score 1)\r\n        const descMatch = product.description && product.description.toLowerCase().includes(lowerTerm);\r\n        if (descMatch) score += 1;\r\n        \r\n        return { product, score };\r\n      });\r\n      \r\n      // Filter out products with no matches and sort by score (highest first)\r\n      filtered = scoredProducts\r\n        .filter(item => item.score > 0)\r\n        .sort((a, b) => b.score - a.score)\r\n        .map(item => item.product);\r\n    }\r\n\r\n    setFilteredProducts(filtered);\r\n  }, [products, searchTerm, tagsParam]);\r\n\r\n  return (\r\n    <div className=\"product-list-container\">\r\n      {searchTerm ? (\r\n        <h2>Search Results for \"{searchTerm}\"</h2>\r\n      ) : tagsParam ? (\r\n        <h2 style={{ display: 'none' }}>Looking for products with tags: \"{tagsParam}\"</h2>\r\n      ) : (\r\n        <h2>All Products</h2>\r\n      )}\r\n      {filteredProducts.length === 0 ? (\r\n        <p>No products found.</p>\r\n      ) : (\r\n        <ul className=\"product-list-grid\">\r\n          {filteredProducts.map(product => (\r\n            <li key={product.id} className=\"product-card\">\r\n              <Link to={`/product/${encodeURIComponent(product.name)}?id=${product.id}`}>\r\n                <img src={product.imageUrl} alt={product.name} className=\"product-image\" />\r\n                <h3>{product.name}</h3>\r\n                <p className=\"price\">${product.price.toFixed(2)}</p>\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n"],"names":["SearchResults","query","URLSearchParams","useLocation","search","searchTerm","get","tagsParam","products","setProducts","useState","filteredProducts","setFilteredProducts","useEffect","async","res","fetch","data","json","error","console","fetchProducts","filtered","tagList","split","map","tag","trim","toLowerCase","filter","product","tags","some","searchTag","includes","lowerTerm","score","name","description","item","sort","a","b","_jsxs","className","children","style","display","_jsx","length","Link","to","concat","encodeURIComponent","id","src","imageUrl","alt","price","toFixed"],"sourceRoot":""}