{"version":3,"file":"static/js/754.4afa6aa1.chunk.js","mappings":"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","sources":["components/AddressForm.js","components/AddressBookPhone.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './AddressForm.css';\r\n\r\nconst AddressForm = ({ initialAddress, onSave, onCancel }) => {\r\n  const [address, setAddress] = useState(initialAddress || {\r\n    fullName: '',\r\n    phoneNumber: '',\r\n    building: '',\r\n    colony: '',\r\n    region: '',\r\n    city: '',\r\n    area: '',\r\n    address: '',\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setAddress(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSave(address);\r\n  };\r\n\r\n  return (\r\n    <div className=\"address-card\">\r\n      <form className=\"address-form\" onSubmit={handleSubmit}>\r\n        <label>\r\n          Full Name:\r\n          <input type=\"text\" name=\"fullName\" value={address.fullName} onChange={handleChange} required />\r\n        </label>\r\n        <label>\r\n          Phone Number:\r\n          <input type=\"text\" name=\"phoneNumber\" value={address.phoneNumber} onChange={handleChange} required />\r\n        </label>\r\n        <label>\r\n          Building / House No / Floor / Street:\r\n          <input type=\"text\" name=\"building\" value={address.building} onChange={handleChange} />\r\n        </label>\r\n        <label>\r\n          Colony / Suburb / Locality / Landmark:\r\n          <input type=\"text\" name=\"colony\" value={address.colony} onChange={handleChange} />\r\n        </label>\r\n        <label>\r\n          Region:\r\n          <input type=\"text\" name=\"region\" value={address.region} onChange={handleChange} />\r\n        </label>\r\n        <label>\r\n          City:\r\n          <input type=\"text\" name=\"city\" value={address.city} onChange={handleChange} />\r\n        </label>\r\n        <label>\r\n          Area:\r\n          <input type=\"text\" name=\"area\" value={address.area} onChange={handleChange} />\r\n        </label>\r\n        <label>\r\n          Address:\r\n          <textarea name=\"address\" value={address.address} onChange={handleChange} />\r\n        </label>\r\n        <div className=\"address-form-buttons\">\r\n          <button type=\"submit\">Save</button>\r\n          <button type=\"button\" onClick={onCancel}>Cancel</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddressForm;\r\n","import React from 'react';\r\nimport AddressForm from './AddressForm';\r\n\r\nconst AddressBookPhone = ({\r\n  addresses = [],\r\n  editingAddress = false,\r\n  currentAddressIndex = null,\r\n  handleEditClick = () => {},\r\n  handleAddNewClick = () => {},\r\n  handleSaveAddress = () => {},\r\n  handleCancelEdit = () => {},\r\n}) => {\r\n  return (\r\n    <section className=\"profile-section address-book\">\r\n      {editingAddress ? (\r\n        <AddressForm\r\n          initialAddress={currentAddressIndex !== null ? addresses[currentAddressIndex] : null}\r\n          onSave={handleSaveAddress}\r\n          onCancel={handleCancelEdit}\r\n        />\r\n      ) : (\r\n        <>\r\n          {addresses.length > 0 ? (\r\n            addresses.map((addr, index) => (\r\n              <div key={index} className=\"address-box\">\r\n                <p><strong>Address {index + 1}:</strong></p>\r\n                <p>{addr.fullName}</p>\r\n                <p>{addr.phoneNumber}</p>\r\n                <p>{addr.building}, {addr.colony}, {addr.region}, {addr.city}, {addr.area}</p>\r\n                <p>{addr.address}</p>\r\n                <button className=\"edit-address-button\" onClick={() => handleEditClick(index)}>Edit</button>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No addresses available</p>\r\n          )}\r\n          <button onClick={handleAddNewClick}>Add New Address</button>\r\n        </>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AddressBookPhone;\r\n"],"names":["_ref","initialAddress","onSave","onCancel","address","setAddress","useState","fullName","phoneNumber","building","colony","region","city","area","handleChange","e","name","value","target","prev","_objectSpread","_jsx","className","children","_jsxs","onSubmit","preventDefault","type","onChange","required","onClick","addresses","editingAddress","currentAddressIndex","handleEditClick","handleAddNewClick","handleSaveAddress","handleCancelEdit","AddressForm","_Fragment","length","map","addr","index"],"sourceRoot":""}