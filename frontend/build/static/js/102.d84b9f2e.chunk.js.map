{"version":3,"file":"static/js/102.d84b9f2e.chunk.js","mappings":"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","sources":["components/AISearchResults.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation, Link } from 'react-router-dom';\r\nimport './AISearchResults.css';\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\n// AI-powered search algorithm\r\nconst aiSearchProducts = (products, searchTerm) => {\r\n  if (!searchTerm) return products;\r\n  \r\n  const lowerTerm = searchTerm.toLowerCase();\r\n  const searchWords = lowerTerm.split(/\\s+/).filter(word => word.length > 0);\r\n  \r\n  // Score products based on different criteria\r\n  const scoredProducts = products.map(product => {\r\n    let score = 0;\r\n    const productName = product.name?.toLowerCase() || '';\r\n    const productDescription = product.description?.toLowerCase() || '';\r\n    const productTags = product.tags?.map(tag => tag.toLowerCase()) || [];\r\n    \r\n    // Exact name match (highest priority)\r\n    if (productName === lowerTerm) {\r\n      score += 100;\r\n    }\r\n    \r\n    // Name contains search term\r\n    if (productName.includes(lowerTerm)) {\r\n      score += 50;\r\n    }\r\n    \r\n    // Individual word matches in name\r\n    searchWords.forEach(word => {\r\n      if (productName.includes(word)) {\r\n        score += 20;\r\n      }\r\n    });\r\n    \r\n    // Tag matches (medium priority)\r\n    if (productTags.some(tag => tag === lowerTerm)) {\r\n      score += 40;\r\n    }\r\n    \r\n    productTags.forEach(tag => {\r\n      searchWords.forEach(word => {\r\n        if (tag.includes(word)) {\r\n          score += 15;\r\n        }\r\n      });\r\n    });\r\n    \r\n    // Description matches (lowest priority)\r\n    if (productDescription.includes(lowerTerm)) {\r\n      score += 10;\r\n    }\r\n    \r\n    searchWords.forEach(word => {\r\n      if (productDescription.includes(word)) {\r\n        score += 5;\r\n      }\r\n    });\r\n    \r\n    return { ...product, searchScore: score };\r\n  });\r\n  \r\n  // Filter out products with score 0 and sort by score descending\r\n  return scoredProducts\r\n    .filter(product => product.searchScore > 0)\r\n    .sort((a, b) => b.searchScore - a.searchScore);\r\n};\r\n\r\nconst AISearchResults = () => {\r\n  const query = useQuery();\r\n  const searchTerm = query.get('q') || '';\r\n  const tagsParam = query.get('tags') || '';\r\n  const [products, setProducts] = useState([]);\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const [searchAnalysis, setSearchAnalysis] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const res = await fetch('http://localhost:5000/api/products');\r\n        const data = await res.json();\r\n        setProducts(data);\r\n      } catch (error) {\r\n        console.error('Error fetching products:', error);\r\n      }\r\n    };\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let filtered = products;\r\n    let analysis = '';\r\n    \r\n    if (tagsParam) {\r\n      // Tag-based search\r\n      const tagList = tagsParam.split(',').map(tag => tag.trim().toLowerCase());\r\n      filtered = products.filter(product => \r\n        product.tags && product.tags.some(tag => \r\n          tagList.some(searchTag => tag.toLowerCase().includes(searchTag))\r\n        )\r\n      );\r\n      analysis = `Found ${filtered.length} products matching tags: ${tagList.join(', ')}`;\r\n    } \r\n    else if (searchTerm) {\r\n      // AI-powered search\r\n      filtered = aiSearchProducts(products, searchTerm);\r\n      \r\n      // Generate analysis text\r\n      const exactMatches = filtered.filter(p => p.searchScore >= 50).length;\r\n      const goodMatches = filtered.filter(p => p.searchScore >= 20 && p.searchScore < 50).length;\r\n      const partialMatches = filtered.filter(p => p.searchScore < 20).length;\r\n      \r\n      analysis = `AI found ${filtered.length} results: ${exactMatches} exact matches, ${goodMatches} good matches, ${partialMatches} partial matches`;\r\n    }\r\n\r\n    setFilteredProducts(filtered);\r\n    setSearchAnalysis(analysis);\r\n  }, [products, searchTerm, tagsParam]);\r\n\r\n  return (\r\n    <div className=\"product-list-container\">\r\n      {searchTerm ? (\r\n        <div>\r\n          <h2>AI Search Results for \"{searchTerm}\"</h2>\r\n          {searchAnalysis && <p className=\"search-analysis\">{searchAnalysis}</p>}\r\n        </div>\r\n      ) : tagsParam ? (\r\n        <div>\r\n          <h2 style={{ display: 'none' }}>Looking for products with tags: \"{tagsParam}\"</h2>\r\n          <p className=\"search-analysis\">{searchAnalysis}</p>\r\n        </div>\r\n      ) : (\r\n        <h2>All Products</h2>\r\n      )}\r\n      \r\n      {filteredProducts.length === 0 ? (\r\n        <p>No products found.</p>\r\n      ) : (\r\n        <ul className=\"product-list-grid\">\r\n          {filteredProducts.map(product => (\r\n            <li key={product.id} className=\"product-card\">\r\n              <Link to={`/product/${encodeURIComponent(product.name)}?id=${product.id}`}>\r\n                <img src={product.imageUrl} alt={product.name} className=\"product-image\" />\r\n                <h3>{product.name}</h3>\r\n                <p className=\"price\">${product.price.toFixed(2)}</p>\r\n                {product.searchScore && (\r\n                  <p className=\"match-score\">Match: {product.searchScore}%</p>\r\n                )}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AISearchResults;\r\n"],"names":["AISearchResults","query","URLSearchParams","useLocation","search","searchTerm","get","tagsParam","products","setProducts","useState","filteredProducts","setFilteredProducts","searchAnalysis","setSearchAnalysis","useEffect","async","res","fetch","data","json","error","console","fetchProducts","filtered","analysis","tagList","split","map","tag","trim","toLowerCase","filter","product","tags","some","searchTag","includes","concat","length","join","aiSearchProducts","lowerTerm","searchWords","word","_product$name","_product$description","_product$tags","score","productName","name","productDescription","description","productTags","forEach","_objectSpread","searchScore","sort","a","b","exactMatches","p","goodMatches","partialMatches","_jsxs","className","children","_jsx","style","display","Link","to","encodeURIComponent","id","src","imageUrl","alt","price","toFixed"],"sourceRoot":""}