{"version":3,"file":"static/js/157.141a935c.chunk.js","mappings":"wKAGA,MAgDA,EAhDyBA,KACvB,MAAM,aAAEC,IAAiBC,EAAAA,EAAAA,MAClBC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MAwBnC,OAtBAK,EAAAA,EAAAA,WAAU,KACcC,WACpB,IACE,MAAMC,QAAYC,MAAM,sCACxB,IAAKD,EAAIE,GACP,MAAM,IAAIC,MAAM,4BAElB,MAEMC,SAFaJ,EAAIK,QAEDC,OAAOC,GAC3BA,EAAQC,YAAcD,EAAQC,WAAWC,KAAKC,GAAOA,EAAIC,gBAAkBtB,EAAasB,gBAE1FnB,EAAYY,EACd,CAAE,MAAOQ,GACPf,EAASe,EAAIC,QACf,CAAC,QACClB,GAAW,EACb,GAEFmB,IACC,CAACzB,IAEAK,GAAgBqB,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,kCAAgC3B,EAAa,UAChEO,GAAcmB,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,UAAQpB,KACL,IAApBL,EAAS0B,QAAqBF,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,kCAAgC3B,EAAa,SAGhF0B,EAAAA,EAAAA,MAAA,OAAKG,UAAU,yBAAwBF,SAAA,EACrCD,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CAAI,yBAAuB3B,MAC3B8B,EAAAA,EAAAA,KAAA,OAAKD,UAAU,oBAAmBF,SAC/BzB,EAAS6B,IAAIb,IACZQ,EAAAA,EAAAA,MAAA,OAAsBG,UAAU,eAAcF,SAAA,EAC5CG,EAAAA,EAAAA,KAAA,OAAKE,IAAKd,EAAQe,SAAUC,IAAKhB,EAAQiB,KAAMN,UAAU,mBACzDC,EAAAA,EAAAA,KAAA,MAAID,UAAU,eAAcF,SAAET,EAAQiB,QACtCT,EAAAA,EAAAA,MAAA,KAAGG,UAAU,gBAAeF,SAAA,CAAC,IAAET,EAAQkB,MAAMC,QAAQ,QAH7CnB,EAAQoB,U","sources":["components/CategoryProducts.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst CategoryProducts = () => {\r\n  const { categoryName } = useParams();\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const res = await fetch('http://localhost:5000/api/products');\r\n        if (!res.ok) {\r\n          throw new Error('Failed to fetch products');\r\n        }\r\n        const data = await res.json();\r\n        // Filter products by categoryName (case insensitive)\r\n        const filtered = data.filter(product =>\r\n          product.categories && product.categories.some(cat => cat.toLowerCase() === categoryName.toLowerCase())\r\n        );\r\n        setProducts(filtered);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchProducts();\r\n  }, [categoryName]);\r\n\r\n  if (loading) return <p>Loading products for category \"{categoryName}\"...</p>;\r\n  if (error) return <p>Error: {error}</p>;\r\n  if (products.length === 0) return <p>No products found in category \"{categoryName}\".</p>;\r\n\r\n  return (\r\n    <div className=\"product-list-container\">\r\n      <h2>Products in category: {categoryName}</h2>\r\n      <div className=\"product-list-grid\">\r\n        {products.map(product => (\r\n          <div key={product.id} className=\"product-card\">\r\n            <img src={product.imageUrl} alt={product.name} className=\"product-image\" />\r\n            <h3 className=\"product-name\">{product.name}</h3>\r\n            <p className=\"product-price\">${product.price.toFixed(2)}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryProducts;\r\n"],"names":["CategoryProducts","categoryName","useParams","products","setProducts","useState","loading","setLoading","error","setError","useEffect","async","res","fetch","ok","Error","filtered","json","filter","product","categories","some","cat","toLowerCase","err","message","fetchProducts","_jsxs","children","length","className","_jsx","map","src","imageUrl","alt","name","price","toFixed","id"],"sourceRoot":""}